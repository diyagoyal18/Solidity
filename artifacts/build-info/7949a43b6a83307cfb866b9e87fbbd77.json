{
	"id": "7949a43b6a83307cfb866b9e87fbbd77",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"OpenZeppelin-ERC20.sol": {
				"content": "pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n * Originally based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract ERC20 is IERC20 {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowed;\n\n  uint256 private _totalSupply;\n\n  /**\n  * @dev Total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param owner The address to query the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address owner) public view returns (uint256) {\n    return _balances[owner];\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param owner address The address which owns the funds.\n   * @param spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(\n    address owner,\n    address spender\n   )\n    public\n    view\n    returns (uint256)\n  {\n    return _allowed[owner][spender];\n  }\n\n  /**\n  * @dev Transfer token for a specified address\n  * @param to The address to transfer to.\n  * @param value The amount to be transferred.\n  */\n  function transfer(address to, uint256 value) public returns (bool) {\n    require(value <= _balances[msg.sender]);\n    require(to != address(0));\n\n    _balances[msg.sender] = _balances[msg.sender].sub(value);\n    _balances[to] = _balances[to].add(value);\n    emit Transfer(msg.sender, to, value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param spender The address which will spend the funds.\n   * @param value The amount of tokens to be spent.\n   */\n  function approve(address spender, uint256 value) public returns (bool) {\n    require(spender != address(0));\n\n    _allowed[msg.sender][spender] = value;\n    emit Approval(msg.sender, spender, value);\n    return true;\n  }\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param from address The address which you want to send tokens from\n   * @param to address The address which you want to transfer to\n   * @param value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(\n    address from,\n    address to,\n    uint256 value\n  )\n    public\n    returns (bool)\n  {\n    require(value <= _balances[from]);\n    require(value <= _allowed[from][msg.sender]);\n    require(to != address(0));\n\n    _balances[from] = _balances[from].sub(value);\n    _balances[to] = _balances[to].add(value);\n    _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\n    emit Transfer(from, to, value);\n    return true;\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed_[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param spender The address which will spend the funds.\n   * @param addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseAllowance(\n    address spender,\n    uint256 addedValue\n  )\n    public\n    returns (bool)\n  {\n    require(spender != address(0));\n\n    _allowed[msg.sender][spender] = (\n      _allowed[msg.sender][spender].add(addedValue));\n    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed_[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param spender The address which will spend the funds.\n   * @param subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseAllowance(\n    address spender,\n    uint256 subtractedValue\n  )\n    public\n    returns (bool)\n  {\n    require(spender != address(0));\n\n    _allowed[msg.sender][spender] = (\n      _allowed[msg.sender][spender].sub(subtractedValue));\n    emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\n    return true;\n  }\n\n  /**\n   * @dev Internal function that mints an amount of the token and assigns it to\n   * an account. This encapsulates the modification of balances such that the\n   * proper events are emitted.\n   * @param account The account that will receive the created tokens.\n   * @param amount The amount that will be created.\n   */\n  function _mint(address account, uint256 amount) internal {\nrequire(account != address(0), \"Invalid address\");\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Internal function that burns an amount of the token of a given\n   * account.\n   * @param account The account whose tokens will be burnt.\n   * @param amount The amount that will be burnt.\n   */\n  function _burn(address account, uint256 amount) internal {\nrequire(account != address(0), \"Invalid address\");\n    require(amount <= _balances[account]);\n\n    _totalSupply = _totalSupply.sub(amount);\n    _balances[account] = _balances[account].sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Internal function that burns an amount of the token of a given\n   * account, deducting from the sender's allowance for said account. Uses the\n   * internal burn function.\n   * @param account The account whose tokens will be burnt.\n   * @param amount The amount that will be burnt.\n   */\n  function _burnFrom(address account, uint256 amount) internal {\n    require(amount <= _allowed[account][msg.sender]);\n\n    // Should https://github.com/OpenZeppelin/zeppelin-solidity/issues/707 be accepted,\n    // this function needs to emit an event with the updated approval.\n    _allowed[account][msg.sender] = _allowed[account][msg.sender].sub(\n      amount);\n    _burn(account, amount);\n  }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x2B ADD GAS 0xD5 BASEFEE 0xBF 0xAE PUSH31 0x6A686AA121D945836059001141460B538040A3E4C3AB5064736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "482:6210:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0x2B ADD GAS 0xD5 BASEFEE 0xBF 0xAE PUSH31 0x6A686AA121D945836059001141460B538040A3E4C3AB5064736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "482:6210:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220432b015ad548bfae7e6a686aa121d945836059001141460b538040a3e4c3ab5064736f6c634300081c0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"OpenZeppelin-ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"OpenZeppelin-ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard token. https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md Originally based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens that an owner allowed to a spender.",
								"params": {
									"owner": "address The address which owns the funds.",
									"spender": "address The address which will spend the funds."
								},
								"returns": {
									"_0": "A uint256 specifying the amount of tokens still available for the spender."
								}
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"owner": "The address to query the balance of."
								},
								"returns": {
									"_0": "An uint256 representing the amount owned by the passed address."
								}
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
								"params": {
									"spender": "The address which will spend the funds.",
									"subtractedValue": "The amount of tokens to decrease the allowance by."
								}
							},
							"increaseAllowance(address,uint256)": {
								"details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
								"params": {
									"addedValue": "The amount of tokens to increase the allowance by.",
									"spender": "The address which will spend the funds."
								}
							},
							"totalSupply()": {
								"details": "Total number of tokens in existence"
							},
							"transfer(address,uint256)": {
								"details": "Transfer token for a specified address",
								"params": {
									"to": "The address to transfer to.",
									"value": "The amount to be transferred."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another",
								"params": {
									"from": "address The address which you want to send tokens from",
									"to": "address The address which you want to transfer to",
									"value": "uint256 the amount of tokens to be transferred"
								}
							}
						},
						"title": "Standard ERC20 token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"OpenZeppelin-ERC20.sol\":427:6968  contract ERC20 is IERC20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"OpenZeppelin-ERC20.sol\":427:6968  contract ERC20 is IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"OpenZeppelin-ERC20.sol\":2627:2847  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OpenZeppelin-ERC20.sol\":698:781  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OpenZeppelin-ERC20.sol\":3119:3577  function transferFrom(... */\n    tag_5:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OpenZeppelin-ERC20.sol\":4028:4358  function increaseAllowance(... */\n    tag_6:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OpenZeppelin-ERC20.sol\":978:1076  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OpenZeppelin-ERC20.sol\":4814:5154  function decreaseAllowance(... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OpenZeppelin-ERC20.sol\":1695:2011  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_9:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OpenZeppelin-ERC20.sol\":1393:1543  function allowance(... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"OpenZeppelin-ERC20.sol\":2627:2847  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_15:\n        /* \"OpenZeppelin-ERC20.sol\":2692:2696  bool */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":2731:2732  0 */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":2712:2733  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"OpenZeppelin-ERC20.sol\":2712:2719  spender */\n      dup4\n        /* \"OpenZeppelin-ERC20.sol\":2712:2733  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"OpenZeppelin-ERC20.sol\":2704:2734  require(spender != address(0)) */\n      tag_50\n      jumpi\n      revert(0x00, 0x00)\n    tag_50:\n        /* \"OpenZeppelin-ERC20.sol\":2773:2778  value */\n      dup2\n        /* \"OpenZeppelin-ERC20.sol\":2741:2749  _allowed */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":2741:2761  _allowed[msg.sender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":2750:2760  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":2741:2761  _allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":2741:2770  _allowed[msg.sender][spender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":2762:2769  spender */\n      dup6\n        /* \"OpenZeppelin-ERC20.sol\":2741:2770  _allowed[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":2741:2778  _allowed[msg.sender][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":2810:2817  spender */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":2789:2825  Approval(msg.sender, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"OpenZeppelin-ERC20.sol\":2798:2808  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":2789:2825  Approval(msg.sender, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"OpenZeppelin-ERC20.sol\":2819:2824  value */\n      dup5\n        /* \"OpenZeppelin-ERC20.sol\":2789:2825  Approval(msg.sender, spender, value) */\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"OpenZeppelin-ERC20.sol\":2838:2842  true */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":2831:2842  return true */\n      swap1\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":2627:2847  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"OpenZeppelin-ERC20.sol\":698:781  function totalSupply() public view returns (uint256) {... */\n    tag_19:\n        /* \"OpenZeppelin-ERC20.sol\":742:749  uint256 */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":764:776  _totalSupply */\n      sload(0x02)\n        /* \"OpenZeppelin-ERC20.sol\":757:776  return _totalSupply */\n      swap1\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":698:781  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"OpenZeppelin-ERC20.sol\":3119:3577  function transferFrom(... */\n    tag_25:\n        /* \"OpenZeppelin-ERC20.sol\":3222:3226  bool */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3253:3262  _balances */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3253:3268  _balances[from] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3263:3267  from */\n      dup6\n        /* \"OpenZeppelin-ERC20.sol\":3253:3268  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"OpenZeppelin-ERC20.sol\":3244:3249  value */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":3244:3268  value <= _balances[from] */\n      gt\n      iszero\n        /* \"OpenZeppelin-ERC20.sol\":3236:3269  require(value <= _balances[from]) */\n      tag_54\n      jumpi\n      revert(0x00, 0x00)\n    tag_54:\n        /* \"OpenZeppelin-ERC20.sol\":3292:3300  _allowed */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":3292:3306  _allowed[from] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3301:3305  from */\n      dup6\n        /* \"OpenZeppelin-ERC20.sol\":3292:3306  _allowed[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":3292:3318  _allowed[from][msg.sender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3307:3317  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":3292:3318  _allowed[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"OpenZeppelin-ERC20.sol\":3283:3288  value */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":3283:3318  value <= _allowed[from][msg.sender] */\n      gt\n      iszero\n        /* \"OpenZeppelin-ERC20.sol\":3275:3319  require(value <= _allowed[from][msg.sender]) */\n      tag_55\n      jumpi\n      revert(0x00, 0x00)\n    tag_55:\n        /* \"OpenZeppelin-ERC20.sol\":3347:3348  0 */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3333:3349  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"OpenZeppelin-ERC20.sol\":3333:3335  to */\n      dup4\n        /* \"OpenZeppelin-ERC20.sol\":3333:3349  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"OpenZeppelin-ERC20.sol\":3325:3350  require(to != address(0)) */\n      tag_56\n      jumpi\n      revert(0x00, 0x00)\n    tag_56:\n        /* \"OpenZeppelin-ERC20.sol\":3375:3401  _balances[from].sub(value) */\n      tag_57\n        /* \"OpenZeppelin-ERC20.sol\":3395:3400  value */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":3375:3384  _balances */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3375:3390  _balances[from] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3385:3389  from */\n      dup8\n        /* \"OpenZeppelin-ERC20.sol\":3375:3390  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"OpenZeppelin-ERC20.sol\":3375:3394  _balances[from].sub */\n      tag_58\n      swap1\n        /* \"OpenZeppelin-ERC20.sol\":3375:3401  _balances[from].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_57:\n        /* \"OpenZeppelin-ERC20.sol\":3357:3366  _balances */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3357:3372  _balances[from] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3367:3371  from */\n      dup7\n        /* \"OpenZeppelin-ERC20.sol\":3357:3372  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":3357:3401  _balances[from] = _balances[from].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":3423:3447  _balances[to].add(value) */\n      tag_59\n        /* \"OpenZeppelin-ERC20.sol\":3441:3446  value */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":3423:3432  _balances */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3423:3436  _balances[to] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3433:3435  to */\n      dup7\n        /* \"OpenZeppelin-ERC20.sol\":3423:3436  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"OpenZeppelin-ERC20.sol\":3423:3440  _balances[to].add */\n      tag_60\n      swap1\n        /* \"OpenZeppelin-ERC20.sol\":3423:3447  _balances[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"OpenZeppelin-ERC20.sol\":3407:3416  _balances */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3407:3420  _balances[to] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3417:3419  to */\n      dup6\n        /* \"OpenZeppelin-ERC20.sol\":3407:3420  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":3407:3447  _balances[to] = _balances[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":3482:3519  _allowed[from][msg.sender].sub(value) */\n      tag_61\n        /* \"OpenZeppelin-ERC20.sol\":3513:3518  value */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":3482:3490  _allowed */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":3482:3496  _allowed[from] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3491:3495  from */\n      dup8\n        /* \"OpenZeppelin-ERC20.sol\":3482:3496  _allowed[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":3482:3508  _allowed[from][msg.sender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3497:3507  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":3482:3508  _allowed[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"OpenZeppelin-ERC20.sol\":3482:3512  _allowed[from][msg.sender].sub */\n      tag_58\n      swap1\n        /* \"OpenZeppelin-ERC20.sol\":3482:3519  _allowed[from][msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_61:\n        /* \"OpenZeppelin-ERC20.sol\":3453:3461  _allowed */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":3453:3467  _allowed[from] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3462:3466  from */\n      dup7\n        /* \"OpenZeppelin-ERC20.sol\":3453:3467  _allowed[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":3453:3479  _allowed[from][msg.sender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":3468:3478  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":3453:3479  _allowed[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":3453:3519  _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":3545:3547  to */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":3530:3555  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"OpenZeppelin-ERC20.sol\":3539:3543  from */\n      dup5\n        /* \"OpenZeppelin-ERC20.sol\":3530:3555  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"OpenZeppelin-ERC20.sol\":3549:3554  value */\n      dup5\n        /* \"OpenZeppelin-ERC20.sol\":3530:3555  Transfer(from, to, value) */\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"OpenZeppelin-ERC20.sol\":3568:3572  true */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":3561:3572  return true */\n      swap1\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":3119:3577  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"OpenZeppelin-ERC20.sol\":4028:4358  function increaseAllowance(... */\n    tag_29:\n        /* \"OpenZeppelin-ERC20.sol\":4128:4132  bool */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":4169:4170  0 */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":4150:4171  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"OpenZeppelin-ERC20.sol\":4150:4157  spender */\n      dup4\n        /* \"OpenZeppelin-ERC20.sol\":4150:4171  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"OpenZeppelin-ERC20.sol\":4142:4172  require(spender != address(0)) */\n      tag_64\n      jumpi\n      revert(0x00, 0x00)\n    tag_64:\n        /* \"OpenZeppelin-ERC20.sol\":4219:4264  _allowed[msg.sender][spender].add(addedValue) */\n      tag_65\n        /* \"OpenZeppelin-ERC20.sol\":4253:4263  addedValue */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":4219:4227  _allowed */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":4219:4239  _allowed[msg.sender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":4228:4238  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":4219:4239  _allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":4219:4248  _allowed[msg.sender][spender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":4240:4247  spender */\n      dup7\n        /* \"OpenZeppelin-ERC20.sol\":4219:4248  _allowed[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"OpenZeppelin-ERC20.sol\":4219:4252  _allowed[msg.sender][spender].add */\n      tag_60\n      swap1\n        /* \"OpenZeppelin-ERC20.sol\":4219:4264  _allowed[msg.sender][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_65:\n        /* \"OpenZeppelin-ERC20.sol\":4179:4187  _allowed */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":4179:4199  _allowed[msg.sender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":4188:4198  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":4179:4199  _allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":4179:4208  _allowed[msg.sender][spender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":4200:4207  spender */\n      dup6\n        /* \"OpenZeppelin-ERC20.sol\":4179:4208  _allowed[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":4179:4265  _allowed[msg.sender][spender] = (... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":4297:4304  spender */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":4276:4336  Approval(msg.sender, spender, _allowed[msg.sender][spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"OpenZeppelin-ERC20.sol\":4285:4295  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":4276:4336  Approval(msg.sender, spender, _allowed[msg.sender][spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"OpenZeppelin-ERC20.sol\":4306:4314  _allowed */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":4306:4326  _allowed[msg.sender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":4315:4325  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":4306:4326  _allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":4306:4335  _allowed[msg.sender][spender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":4327:4334  spender */\n      dup8\n        /* \"OpenZeppelin-ERC20.sol\":4306:4335  _allowed[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"OpenZeppelin-ERC20.sol\":4276:4336  Approval(msg.sender, spender, _allowed[msg.sender][spender]) */\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"OpenZeppelin-ERC20.sol\":4349:4353  true */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":4342:4353  return true */\n      swap1\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":4028:4358  function increaseAllowance(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"OpenZeppelin-ERC20.sol\":978:1076  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_34:\n        /* \"OpenZeppelin-ERC20.sol\":1033:1040  uint256 */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1055:1064  _balances */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1055:1071  _balances[owner] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1065:1070  owner */\n      dup4\n        /* \"OpenZeppelin-ERC20.sol\":1055:1071  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"OpenZeppelin-ERC20.sol\":1048:1071  return _balances[owner] */\n      swap1\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":978:1076  function balanceOf(address owner) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"OpenZeppelin-ERC20.sol\":4814:5154  function decreaseAllowance(... */\n    tag_38:\n        /* \"OpenZeppelin-ERC20.sol\":4919:4923  bool */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":4960:4961  0 */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":4941:4962  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"OpenZeppelin-ERC20.sol\":4941:4948  spender */\n      dup4\n        /* \"OpenZeppelin-ERC20.sol\":4941:4962  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"OpenZeppelin-ERC20.sol\":4933:4963  require(spender != address(0)) */\n      tag_69\n      jumpi\n      revert(0x00, 0x00)\n    tag_69:\n        /* \"OpenZeppelin-ERC20.sol\":5010:5060  _allowed[msg.sender][spender].sub(subtractedValue) */\n      tag_70\n        /* \"OpenZeppelin-ERC20.sol\":5044:5059  subtractedValue */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":5010:5018  _allowed */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":5010:5030  _allowed[msg.sender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":5019:5029  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":5010:5030  _allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":5010:5039  _allowed[msg.sender][spender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":5031:5038  spender */\n      dup7\n        /* \"OpenZeppelin-ERC20.sol\":5010:5039  _allowed[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"OpenZeppelin-ERC20.sol\":5010:5043  _allowed[msg.sender][spender].sub */\n      tag_58\n      swap1\n        /* \"OpenZeppelin-ERC20.sol\":5010:5060  _allowed[msg.sender][spender].sub(subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"OpenZeppelin-ERC20.sol\":4970:4978  _allowed */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":4970:4990  _allowed[msg.sender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":4979:4989  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":4970:4990  _allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":4970:4999  _allowed[msg.sender][spender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":4991:4998  spender */\n      dup6\n        /* \"OpenZeppelin-ERC20.sol\":4970:4999  _allowed[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":4970:5061  _allowed[msg.sender][spender] = (... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":5093:5100  spender */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":5072:5132  Approval(msg.sender, spender, _allowed[msg.sender][spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"OpenZeppelin-ERC20.sol\":5081:5091  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":5072:5132  Approval(msg.sender, spender, _allowed[msg.sender][spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"OpenZeppelin-ERC20.sol\":5102:5110  _allowed */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":5102:5122  _allowed[msg.sender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":5111:5121  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":5102:5122  _allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":5102:5131  _allowed[msg.sender][spender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":5123:5130  spender */\n      dup8\n        /* \"OpenZeppelin-ERC20.sol\":5102:5131  _allowed[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"OpenZeppelin-ERC20.sol\":5072:5132  Approval(msg.sender, spender, _allowed[msg.sender][spender]) */\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"OpenZeppelin-ERC20.sol\":5145:5149  true */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":5138:5149  return true */\n      swap1\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":4814:5154  function decreaseAllowance(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"OpenZeppelin-ERC20.sol\":1695:2011  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_42:\n        /* \"OpenZeppelin-ERC20.sol\":1756:1760  bool */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1785:1794  _balances */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1785:1806  _balances[msg.sender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1795:1805  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":1785:1806  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"OpenZeppelin-ERC20.sol\":1776:1781  value */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":1776:1806  value <= _balances[msg.sender] */\n      gt\n      iszero\n        /* \"OpenZeppelin-ERC20.sol\":1768:1807  require(value <= _balances[msg.sender]) */\n      tag_73\n      jumpi\n      revert(0x00, 0x00)\n    tag_73:\n        /* \"OpenZeppelin-ERC20.sol\":1835:1836  0 */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1821:1837  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"OpenZeppelin-ERC20.sol\":1821:1823  to */\n      dup4\n        /* \"OpenZeppelin-ERC20.sol\":1821:1837  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"OpenZeppelin-ERC20.sol\":1813:1838  require(to != address(0)) */\n      tag_74\n      jumpi\n      revert(0x00, 0x00)\n    tag_74:\n        /* \"OpenZeppelin-ERC20.sol\":1869:1901  _balances[msg.sender].sub(value) */\n      tag_75\n        /* \"OpenZeppelin-ERC20.sol\":1895:1900  value */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":1869:1878  _balances */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1869:1890  _balances[msg.sender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1879:1889  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":1869:1890  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"OpenZeppelin-ERC20.sol\":1869:1894  _balances[msg.sender].sub */\n      tag_58\n      swap1\n        /* \"OpenZeppelin-ERC20.sol\":1869:1901  _balances[msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_75:\n        /* \"OpenZeppelin-ERC20.sol\":1845:1854  _balances */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1845:1866  _balances[msg.sender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1855:1865  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":1845:1866  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":1845:1901  _balances[msg.sender] = _balances[msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":1923:1947  _balances[to].add(value) */\n      tag_76\n        /* \"OpenZeppelin-ERC20.sol\":1941:1946  value */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":1923:1932  _balances */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1923:1936  _balances[to] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1933:1935  to */\n      dup7\n        /* \"OpenZeppelin-ERC20.sol\":1923:1936  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"OpenZeppelin-ERC20.sol\":1923:1940  _balances[to].add */\n      tag_60\n      swap1\n        /* \"OpenZeppelin-ERC20.sol\":1923:1947  _balances[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_76:\n        /* \"OpenZeppelin-ERC20.sol\":1907:1916  _balances */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1907:1920  _balances[to] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1917:1919  to */\n      dup6\n        /* \"OpenZeppelin-ERC20.sol\":1907:1920  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":1907:1947  _balances[to] = _balances[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":1979:1981  to */\n      dup3\n        /* \"OpenZeppelin-ERC20.sol\":1958:1989  Transfer(msg.sender, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"OpenZeppelin-ERC20.sol\":1967:1977  msg.sender */\n      caller\n        /* \"OpenZeppelin-ERC20.sol\":1958:1989  Transfer(msg.sender, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"OpenZeppelin-ERC20.sol\":1983:1988  value */\n      dup5\n        /* \"OpenZeppelin-ERC20.sol\":1958:1989  Transfer(msg.sender, to, value) */\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"OpenZeppelin-ERC20.sol\":2002:2006  true */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":1995:2006  return true */\n      swap1\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":1695:2011  function transfer(address to, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"OpenZeppelin-ERC20.sol\":1393:1543  function allowance(... */\n    tag_47:\n        /* \"OpenZeppelin-ERC20.sol\":1490:1497  uint256 */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1514:1522  _allowed */\n      0x01\n        /* \"OpenZeppelin-ERC20.sol\":1514:1529  _allowed[owner] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1523:1528  owner */\n      dup5\n        /* \"OpenZeppelin-ERC20.sol\":1514:1529  _allowed[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"OpenZeppelin-ERC20.sol\":1514:1538  _allowed[owner][spender] */\n      0x00\n        /* \"OpenZeppelin-ERC20.sol\":1530:1537  spender */\n      dup4\n        /* \"OpenZeppelin-ERC20.sol\":1514:1538  _allowed[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"OpenZeppelin-ERC20.sol\":1507:1538  return _allowed[owner][spender] */\n      swap1\n      pop\n        /* \"OpenZeppelin-ERC20.sol\":1393:1543  function allowance(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_86:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_88:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_89:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_105\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_88\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_90:\n        /* \"#utility.yul\":641:665   */\n      tag_107\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_89\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_108\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_108:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_91:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_110\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_90\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_92:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_93:\n        /* \"#utility.yul\":997:1021   */\n      tag_113\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_92\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_114:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_94:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_116\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_93\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_14:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      0x00\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_119\n      tag_86\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1290:1409   */\n    tag_118:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_120\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_91\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_121\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_94\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1767   */\n    tag_95:\n        /* \"#utility.yul\":1711:1718   */\n      0x00\n        /* \"#utility.yul\":1754:1759   */\n      dup2\n        /* \"#utility.yul\":1747:1760   */\n      iszero\n        /* \"#utility.yul\":1740:1761   */\n      iszero\n        /* \"#utility.yul\":1729:1761   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1773:1882   */\n    tag_96:\n        /* \"#utility.yul\":1854:1875   */\n      tag_124\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1854:1875   */\n      tag_95\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1849:1852   */\n      dup3\n        /* \"#utility.yul\":1842:1876   */\n      mstore\n        /* \"#utility.yul\":1773:1882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1888:2098   */\n    tag_17:\n        /* \"#utility.yul\":1975:1979   */\n      0x00\n        /* \"#utility.yul\":2013:2015   */\n      0x20\n        /* \"#utility.yul\":2002:2011   */\n      dup3\n        /* \"#utility.yul\":1998:2016   */\n      add\n        /* \"#utility.yul\":1990:2016   */\n      swap1\n      pop\n        /* \"#utility.yul\":2026:2091   */\n      tag_126\n        /* \"#utility.yul\":2088:2089   */\n      0x00\n        /* \"#utility.yul\":2077:2086   */\n      dup4\n        /* \"#utility.yul\":2073:2090   */\n      add\n        /* \"#utility.yul\":2064:2070   */\n      dup5\n        /* \"#utility.yul\":2026:2091   */\n      tag_96\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1888:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2222   */\n    tag_97:\n        /* \"#utility.yul\":2191:2215   */\n      tag_128\n        /* \"#utility.yul\":2209:2214   */\n      dup2\n        /* \"#utility.yul\":2191:2215   */\n      tag_92\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2186:2189   */\n      dup3\n        /* \"#utility.yul\":2179:2216   */\n      mstore\n        /* \"#utility.yul\":2104:2222   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2228:2450   */\n    tag_21:\n        /* \"#utility.yul\":2321:2325   */\n      0x00\n        /* \"#utility.yul\":2359:2361   */\n      0x20\n        /* \"#utility.yul\":2348:2357   */\n      dup3\n        /* \"#utility.yul\":2344:2362   */\n      add\n        /* \"#utility.yul\":2336:2362   */\n      swap1\n      pop\n        /* \"#utility.yul\":2372:2443   */\n      tag_130\n        /* \"#utility.yul\":2440:2441   */\n      0x00\n        /* \"#utility.yul\":2429:2438   */\n      dup4\n        /* \"#utility.yul\":2425:2442   */\n      add\n        /* \"#utility.yul\":2416:2422   */\n      dup5\n        /* \"#utility.yul\":2372:2443   */\n      tag_97\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2228:2450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2456:3075   */\n    tag_24:\n        /* \"#utility.yul\":2533:2539   */\n      0x00\n        /* \"#utility.yul\":2541:2547   */\n      0x00\n        /* \"#utility.yul\":2549:2555   */\n      0x00\n        /* \"#utility.yul\":2598:2600   */\n      0x60\n        /* \"#utility.yul\":2586:2595   */\n      dup5\n        /* \"#utility.yul\":2577:2584   */\n      dup7\n        /* \"#utility.yul\":2573:2596   */\n      sub\n        /* \"#utility.yul\":2569:2601   */\n      slt\n        /* \"#utility.yul\":2566:2685   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":2604:2683   */\n      tag_133\n      tag_86\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2566:2685   */\n    tag_132:\n        /* \"#utility.yul\":2724:2725   */\n      0x00\n        /* \"#utility.yul\":2749:2802   */\n      tag_134\n        /* \"#utility.yul\":2794:2801   */\n      dup7\n        /* \"#utility.yul\":2785:2791   */\n      dup3\n        /* \"#utility.yul\":2774:2783   */\n      dup8\n        /* \"#utility.yul\":2770:2792   */\n      add\n        /* \"#utility.yul\":2749:2802   */\n      tag_91\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2739:2802   */\n      swap4\n      pop\n        /* \"#utility.yul\":2695:2812   */\n      pop\n        /* \"#utility.yul\":2851:2853   */\n      0x20\n        /* \"#utility.yul\":2877:2930   */\n      tag_135\n        /* \"#utility.yul\":2922:2929   */\n      dup7\n        /* \"#utility.yul\":2913:2919   */\n      dup3\n        /* \"#utility.yul\":2902:2911   */\n      dup8\n        /* \"#utility.yul\":2898:2920   */\n      add\n        /* \"#utility.yul\":2877:2930   */\n      tag_91\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2867:2930   */\n      swap3\n      pop\n        /* \"#utility.yul\":2822:2940   */\n      pop\n        /* \"#utility.yul\":2979:2981   */\n      0x40\n        /* \"#utility.yul\":3005:3058   */\n      tag_136\n        /* \"#utility.yul\":3050:3057   */\n      dup7\n        /* \"#utility.yul\":3041:3047   */\n      dup3\n        /* \"#utility.yul\":3030:3039   */\n      dup8\n        /* \"#utility.yul\":3026:3048   */\n      add\n        /* \"#utility.yul\":3005:3058   */\n      tag_94\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2995:3058   */\n      swap2\n      pop\n        /* \"#utility.yul\":2950:3068   */\n      pop\n        /* \"#utility.yul\":2456:3075   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3081:3410   */\n    tag_33:\n        /* \"#utility.yul\":3140:3146   */\n      0x00\n        /* \"#utility.yul\":3189:3191   */\n      0x20\n        /* \"#utility.yul\":3177:3186   */\n      dup3\n        /* \"#utility.yul\":3168:3175   */\n      dup5\n        /* \"#utility.yul\":3164:3187   */\n      sub\n        /* \"#utility.yul\":3160:3192   */\n      slt\n        /* \"#utility.yul\":3157:3276   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":3195:3274   */\n      tag_139\n      tag_86\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3157:3276   */\n    tag_138:\n        /* \"#utility.yul\":3315:3316   */\n      0x00\n        /* \"#utility.yul\":3340:3393   */\n      tag_140\n        /* \"#utility.yul\":3385:3392   */\n      dup5\n        /* \"#utility.yul\":3376:3382   */\n      dup3\n        /* \"#utility.yul\":3365:3374   */\n      dup6\n        /* \"#utility.yul\":3361:3383   */\n      add\n        /* \"#utility.yul\":3340:3393   */\n      tag_91\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3330:3393   */\n      swap2\n      pop\n        /* \"#utility.yul\":3286:3403   */\n      pop\n        /* \"#utility.yul\":3081:3410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3416:3890   */\n    tag_46:\n        /* \"#utility.yul\":3484:3490   */\n      0x00\n        /* \"#utility.yul\":3492:3498   */\n      0x00\n        /* \"#utility.yul\":3541:3543   */\n      0x40\n        /* \"#utility.yul\":3529:3538   */\n      dup4\n        /* \"#utility.yul\":3520:3527   */\n      dup6\n        /* \"#utility.yul\":3516:3539   */\n      sub\n        /* \"#utility.yul\":3512:3544   */\n      slt\n        /* \"#utility.yul\":3509:3628   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":3547:3626   */\n      tag_143\n      tag_86\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3509:3628   */\n    tag_142:\n        /* \"#utility.yul\":3667:3668   */\n      0x00\n        /* \"#utility.yul\":3692:3745   */\n      tag_144\n        /* \"#utility.yul\":3737:3744   */\n      dup6\n        /* \"#utility.yul\":3728:3734   */\n      dup3\n        /* \"#utility.yul\":3717:3726   */\n      dup7\n        /* \"#utility.yul\":3713:3735   */\n      add\n        /* \"#utility.yul\":3692:3745   */\n      tag_91\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3682:3745   */\n      swap3\n      pop\n        /* \"#utility.yul\":3638:3755   */\n      pop\n        /* \"#utility.yul\":3794:3796   */\n      0x20\n        /* \"#utility.yul\":3820:3873   */\n      tag_145\n        /* \"#utility.yul\":3865:3872   */\n      dup6\n        /* \"#utility.yul\":3856:3862   */\n      dup3\n        /* \"#utility.yul\":3845:3854   */\n      dup7\n        /* \"#utility.yul\":3841:3863   */\n      add\n        /* \"#utility.yul\":3820:3873   */\n      tag_91\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3810:3873   */\n      swap2\n      pop\n        /* \"#utility.yul\":3765:3883   */\n      pop\n        /* \"#utility.yul\":3416:3890   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3896:4076   */\n    tag_98:\n        /* \"#utility.yul\":3944:4021   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3941:3942   */\n      0x00\n        /* \"#utility.yul\":3934:4022   */\n      mstore\n        /* \"#utility.yul\":4041:4045   */\n      0x11\n        /* \"#utility.yul\":4038:4039   */\n      0x04\n        /* \"#utility.yul\":4031:4046   */\n      mstore\n        /* \"#utility.yul\":4065:4069   */\n      0x24\n        /* \"#utility.yul\":4062:4063   */\n      0x00\n        /* \"#utility.yul\":4055:4070   */\n      revert\n        /* \"#utility.yul\":4082:4276   */\n    tag_81:\n        /* \"#utility.yul\":4122:4126   */\n      0x00\n        /* \"#utility.yul\":4142:4162   */\n      tag_148\n        /* \"#utility.yul\":4160:4161   */\n      dup3\n        /* \"#utility.yul\":4142:4162   */\n      tag_92\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4137:4162   */\n      swap2\n      pop\n        /* \"#utility.yul\":4176:4196   */\n      tag_149\n        /* \"#utility.yul\":4194:4195   */\n      dup4\n        /* \"#utility.yul\":4176:4196   */\n      tag_92\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4171:4196   */\n      swap3\n      pop\n        /* \"#utility.yul\":4220:4221   */\n      dup3\n        /* \"#utility.yul\":4217:4218   */\n      dup3\n        /* \"#utility.yul\":4213:4222   */\n      sub\n        /* \"#utility.yul\":4205:4222   */\n      swap1\n      pop\n        /* \"#utility.yul\":4244:4245   */\n      dup2\n        /* \"#utility.yul\":4238:4242   */\n      dup2\n        /* \"#utility.yul\":4235:4246   */\n      gt\n        /* \"#utility.yul\":4232:4269   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":4249:4267   */\n      tag_151\n      tag_98\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4232:4269   */\n    tag_150:\n        /* \"#utility.yul\":4082:4276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4282:4473   */\n    tag_84:\n        /* \"#utility.yul\":4322:4325   */\n      0x00\n        /* \"#utility.yul\":4341:4361   */\n      tag_153\n        /* \"#utility.yul\":4359:4360   */\n      dup3\n        /* \"#utility.yul\":4341:4361   */\n      tag_92\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4336:4361   */\n      swap2\n      pop\n        /* \"#utility.yul\":4375:4395   */\n      tag_154\n        /* \"#utility.yul\":4393:4394   */\n      dup4\n        /* \"#utility.yul\":4375:4395   */\n      tag_92\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4370:4395   */\n      swap3\n      pop\n        /* \"#utility.yul\":4418:4419   */\n      dup3\n        /* \"#utility.yul\":4415:4416   */\n      dup3\n        /* \"#utility.yul\":4411:4420   */\n      add\n        /* \"#utility.yul\":4404:4420   */\n      swap1\n      pop\n        /* \"#utility.yul\":4439:4442   */\n      dup1\n        /* \"#utility.yul\":4436:4437   */\n      dup3\n        /* \"#utility.yul\":4433:4443   */\n      gt\n        /* \"#utility.yul\":4430:4466   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":4446:4464   */\n      tag_156\n      tag_98\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4430:4466   */\n    tag_155:\n        /* \"#utility.yul\":4282:4473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a0ce4d6b321dbe7cc1e7c333c50bfc30438d1e80f6f63298cc867e6f1c15456664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506110b48061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610086575f3560e01c806370a082311161005957806370a0823114610138578063a457c2d714610168578063a9059cbb14610198578063dd62ed3e146101c857610086565b8063095ea7b31461008a57806318160ddd146100ba57806323b872dd146100d85780633950935114610108575b5f5ffd5b6100a4600480360381019061009f9190610e99565b6101f8565b6040516100b19190610ef1565b60405180910390f35b6100c261031c565b6040516100cf9190610f19565b60405180910390f35b6100f260048036038101906100ed9190610f32565b610325565b6040516100ff9190610ef1565b60405180910390f35b610122600480360381019061011d9190610e99565b6106be565b60405161012f9190610ef1565b60405180910390f35b610152600480360381019061014d9190610f82565b6108e4565b60405161015f9190610f19565b60405180910390f35b610182600480360381019061017d9190610e99565b610929565b60405161018f9190610ef1565b60405180910390f35b6101b260048036038101906101ad9190610e99565b610b4f565b6040516101bf9190610ef1565b60405180910390f35b6101e260048036038101906101dd9190610fad565b610d5c565b6040516101ef9190610f19565b60405180910390f35b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610230575f5ffd5b8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161030a9190610f19565b60405180910390a36001905092915050565b5f600254905090565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205482111561036e575f5ffd5b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548211156103f2575f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610429575f5ffd5b610478825f5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610dde90919063ffffffff16565b5f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610507825f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610df390919063ffffffff16565b5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506105d28260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610dde90919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106ab9190610f19565b60405180910390a3600190509392505050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106f6575f5ffd5b6107818260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610df390919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516108d29190610f19565b60405180910390a36001905092915050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610961575f5ffd5b6109ec8260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610dde90919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054604051610b3d9190610f19565b60405180910390a36001905092915050565b5f5f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054821115610b98575f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bcf575f5ffd5b610c1e825f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610dde90919063ffffffff16565b5f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610cad825f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610df390919063ffffffff16565b5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d4a9190610f19565b60405180910390a36001905092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f8183610deb9190611018565b905092915050565b5f8183610e00919061104b565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610e3582610e0c565b9050919050565b610e4581610e2b565b8114610e4f575f5ffd5b50565b5f81359050610e6081610e3c565b92915050565b5f819050919050565b610e7881610e66565b8114610e82575f5ffd5b50565b5f81359050610e9381610e6f565b92915050565b5f5f60408385031215610eaf57610eae610e08565b5b5f610ebc85828601610e52565b9250506020610ecd85828601610e85565b9150509250929050565b5f8115159050919050565b610eeb81610ed7565b82525050565b5f602082019050610f045f830184610ee2565b92915050565b610f1381610e66565b82525050565b5f602082019050610f2c5f830184610f0a565b92915050565b5f5f5f60608486031215610f4957610f48610e08565b5b5f610f5686828701610e52565b9350506020610f6786828701610e52565b9250506040610f7886828701610e85565b9150509250925092565b5f60208284031215610f9757610f96610e08565b5b5f610fa484828501610e52565b91505092915050565b5f5f60408385031215610fc357610fc2610e08565b5b5f610fd085828601610e52565b9250506020610fe185828601610e52565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61102282610e66565b915061102d83610e66565b925082820390508181111561104557611044610feb565b5b92915050565b5f61105582610e66565b915061106083610e66565b925082820190508082111561107857611077610feb565b5b9291505056fea2646970667358221220a0ce4d6b321dbe7cc1e7c333c50bfc30438d1e80f6f63298cc867e6f1c15456664736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x10B4 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1C8 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x108 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0xF32 JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11D SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x230 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x36E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x429 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x478 DUP3 PUSH0 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x507 DUP3 PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDF3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x5D2 DUP3 PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x781 DUP3 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDF3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x8D2 SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x961 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9EC DUP3 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xB98 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBCF JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC1E DUP3 PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCAD DUP3 PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDF3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD4A SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xE00 SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE35 DUP3 PUSH2 0xE0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE45 DUP2 PUSH2 0xE2B JUMP JUMPDEST DUP2 EQ PUSH2 0xE4F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE60 DUP2 PUSH2 0xE3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE78 DUP2 PUSH2 0xE66 JUMP JUMPDEST DUP2 EQ PUSH2 0xE82 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE93 DUP2 PUSH2 0xE6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEAF JUMPI PUSH2 0xEAE PUSH2 0xE08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEBC DUP6 DUP3 DUP7 ADD PUSH2 0xE52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xECD DUP6 DUP3 DUP7 ADD PUSH2 0xE85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEB DUP2 PUSH2 0xED7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF04 PUSH0 DUP4 ADD DUP5 PUSH2 0xEE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF13 DUP2 PUSH2 0xE66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2C PUSH0 DUP4 ADD DUP5 PUSH2 0xF0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF49 JUMPI PUSH2 0xF48 PUSH2 0xE08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF56 DUP7 DUP3 DUP8 ADD PUSH2 0xE52 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF67 DUP7 DUP3 DUP8 ADD PUSH2 0xE52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF78 DUP7 DUP3 DUP8 ADD PUSH2 0xE85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF97 JUMPI PUSH2 0xF96 PUSH2 0xE08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFA4 DUP5 DUP3 DUP6 ADD PUSH2 0xE52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC3 JUMPI PUSH2 0xFC2 PUSH2 0xE08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFD0 DUP6 DUP3 DUP7 ADD PUSH2 0xE52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFE1 DUP6 DUP3 DUP7 ADD PUSH2 0xE52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1022 DUP3 PUSH2 0xE66 JUMP JUMPDEST SWAP2 POP PUSH2 0x102D DUP4 PUSH2 0xE66 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1045 JUMPI PUSH2 0x1044 PUSH2 0xFEB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1055 DUP3 PUSH2 0xE66 JUMP JUMPDEST SWAP2 POP PUSH2 0x1060 DUP4 PUSH2 0xE66 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1078 JUMPI PUSH2 0x1077 PUSH2 0xFEB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xCE 0x4D PUSH12 0x321DBE7CC1E7C333C50BFC30 NUMBER DUP14 0x1E DUP1 0xF6 0xF6 ORIGIN SWAP9 0xCC DUP7 PUSH31 0x6F1C15456664736F6C634300081C0033000000000000000000000000000000 ",
							"sourceMap": "427:6541:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_253": {
									"entryPoint": 3571,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_450": {
									"entryPoint": 3420,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_550": {
									"entryPoint": 504,
									"id": 550,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_433": {
									"entryPoint": 2276,
									"id": 433,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decreaseAllowance_742": {
									"entryPoint": 2345,
									"id": 742,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_690": {
									"entryPoint": 1726,
									"id": 690,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_268": {
									"entryPoint": 3550,
									"id": 268,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_420": {
									"entryPoint": 796,
									"id": 420,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_638": {
									"entryPoint": 805,
									"id": 638,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_512": {
									"entryPoint": 2895,
									"id": 512,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3592,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4476:3",
										"nodeType": "YulBlock",
										"src": "0:4476:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "748:87:3",
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nativeSrc": "758:29:3",
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nativeSrc": "767:20:3",
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nativeSrc": "796:33:3",
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nativeSrc": "796:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:3",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:3",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:3",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nativeSrc": "886:32:3",
													"nodeType": "YulBlock",
													"src": "886:32:3",
													"statements": [
														{
															"nativeSrc": "896:16:3",
															"nodeType": "YulAssignment",
															"src": "896:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:3",
																"nodeType": "YulIdentifier",
																"src": "907:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:3",
														"nodeType": "YulTypedName",
														"src": "868:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:3",
														"nodeType": "YulTypedName",
														"src": "878:7:3",
														"type": ""
													}
												],
												"src": "841:77:3"
											},
											{
												"body": {
													"nativeSrc": "967:79:3",
													"nodeType": "YulBlock",
													"src": "967:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:3",
																"nodeType": "YulBlock",
																"src": "1024:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:3"
																			},
																			"nativeSrc": "1026:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:3"
																		},
																		"nativeSrc": "1026:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:3"
																				},
																				"nativeSrc": "997:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:3"
																		},
																		"nativeSrc": "987:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:3"
																},
																"nativeSrc": "980:43:3",
																"nodeType": "YulFunctionCall",
																"src": "980:43:3"
															},
															"nativeSrc": "977:63:3",
															"nodeType": "YulIf",
															"src": "977:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:3",
														"nodeType": "YulTypedName",
														"src": "960:5:3",
														"type": ""
													}
												],
												"src": "924:122:3"
											},
											{
												"body": {
													"nativeSrc": "1104:87:3",
													"nodeType": "YulBlock",
													"src": "1104:87:3",
													"statements": [
														{
															"nativeSrc": "1114:29:3",
															"nodeType": "YulAssignment",
															"src": "1114:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:3"
																},
																"nativeSrc": "1123:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:3"
																},
																"nativeSrc": "1152:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:3"
															},
															"nativeSrc": "1152:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:3",
														"nodeType": "YulTypedName",
														"src": "1082:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:3",
														"nodeType": "YulTypedName",
														"src": "1090:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:3",
														"nodeType": "YulTypedName",
														"src": "1098:5:3",
														"type": ""
													}
												],
												"src": "1052:139:3"
											},
											{
												"body": {
													"nativeSrc": "1280:391:3",
													"nodeType": "YulBlock",
													"src": "1280:391:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:3",
																"nodeType": "YulBlock",
																"src": "1326:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:3"
																			},
																			"nativeSrc": "1328:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:3"
																		},
																		"nativeSrc": "1328:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:3"
																		},
																		"nativeSrc": "1297:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:3"
																},
																"nativeSrc": "1293:32:3",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:3"
															},
															"nativeSrc": "1290:119:3",
															"nodeType": "YulIf",
															"src": "1290:119:3"
														},
														{
															"nativeSrc": "1419:117:3",
															"nodeType": "YulBlock",
															"src": "1419:117:3",
															"statements": [
																{
																	"nativeSrc": "1434:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:3",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:3"
																				},
																				"nativeSrc": "1494:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:3"
																		},
																		"nativeSrc": "1473:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:3",
															"nodeType": "YulBlock",
															"src": "1546:118:3",
															"statements": [
																{
																	"nativeSrc": "1561:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:3",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:3",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:3",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:3"
																				},
																				"nativeSrc": "1622:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:3"
																		},
																		"nativeSrc": "1601:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:3",
														"nodeType": "YulTypedName",
														"src": "1242:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:3",
														"nodeType": "YulTypedName",
														"src": "1253:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:3",
														"nodeType": "YulTypedName",
														"src": "1265:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:3",
														"nodeType": "YulTypedName",
														"src": "1273:6:3",
														"type": ""
													}
												],
												"src": "1197:474:3"
											},
											{
												"body": {
													"nativeSrc": "1719:48:3",
													"nodeType": "YulBlock",
													"src": "1719:48:3",
													"statements": [
														{
															"nativeSrc": "1729:32:3",
															"nodeType": "YulAssignment",
															"src": "1729:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1754:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1754:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1747:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "1747:6:3"
																		},
																		"nativeSrc": "1747:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1747:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1740:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:3"
																},
																"nativeSrc": "1740:21:3",
																"nodeType": "YulFunctionCall",
																"src": "1740:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1729:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1729:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1677:90:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1701:5:3",
														"nodeType": "YulTypedName",
														"src": "1701:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1711:7:3",
														"nodeType": "YulTypedName",
														"src": "1711:7:3",
														"type": ""
													}
												],
												"src": "1677:90:3"
											},
											{
												"body": {
													"nativeSrc": "1832:50:3",
													"nodeType": "YulBlock",
													"src": "1832:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1849:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "1849:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1854:14:3",
																			"nodeType": "YulIdentifier",
																			"src": "1854:14:3"
																		},
																		"nativeSrc": "1854:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1854:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1842:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:3"
																},
																"nativeSrc": "1842:34:3",
																"nodeType": "YulFunctionCall",
																"src": "1842:34:3"
															},
															"nativeSrc": "1842:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "1842:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1773:109:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1820:5:3",
														"nodeType": "YulTypedName",
														"src": "1820:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1827:3:3",
														"nodeType": "YulTypedName",
														"src": "1827:3:3",
														"type": ""
													}
												],
												"src": "1773:109:3"
											},
											{
												"body": {
													"nativeSrc": "1980:118:3",
													"nodeType": "YulBlock",
													"src": "1980:118:3",
													"statements": [
														{
															"nativeSrc": "1990:26:3",
															"nodeType": "YulAssignment",
															"src": "1990:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2002:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2002:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2013:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2013:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1998:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:3"
																},
																"nativeSrc": "1998:18:3",
																"nodeType": "YulFunctionCall",
																"src": "1998:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1990:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "1990:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2064:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2064:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2077:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2077:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2088:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2088:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2073:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2073:3:3"
																		},
																		"nativeSrc": "2073:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2073:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2026:37:3",
																	"nodeType": "YulIdentifier",
																	"src": "2026:37:3"
																},
																"nativeSrc": "2026:65:3",
																"nodeType": "YulFunctionCall",
																"src": "2026:65:3"
															},
															"nativeSrc": "2026:65:3",
															"nodeType": "YulExpressionStatement",
															"src": "2026:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1888:210:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1952:9:3",
														"nodeType": "YulTypedName",
														"src": "1952:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1964:6:3",
														"nodeType": "YulTypedName",
														"src": "1964:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1975:4:3",
														"nodeType": "YulTypedName",
														"src": "1975:4:3",
														"type": ""
													}
												],
												"src": "1888:210:3"
											},
											{
												"body": {
													"nativeSrc": "2169:53:3",
													"nodeType": "YulBlock",
													"src": "2169:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2186:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "2186:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2209:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "2209:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2191:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "2191:17:3"
																		},
																		"nativeSrc": "2191:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2191:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2179:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2179:6:3"
																},
																"nativeSrc": "2179:37:3",
																"nodeType": "YulFunctionCall",
																"src": "2179:37:3"
															},
															"nativeSrc": "2179:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "2179:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2104:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2157:5:3",
														"nodeType": "YulTypedName",
														"src": "2157:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2164:3:3",
														"nodeType": "YulTypedName",
														"src": "2164:3:3",
														"type": ""
													}
												],
												"src": "2104:118:3"
											},
											{
												"body": {
													"nativeSrc": "2326:124:3",
													"nodeType": "YulBlock",
													"src": "2326:124:3",
													"statements": [
														{
															"nativeSrc": "2336:26:3",
															"nodeType": "YulAssignment",
															"src": "2336:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2348:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2348:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2359:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2359:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2344:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2344:3:3"
																},
																"nativeSrc": "2344:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2344:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2336:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2336:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2416:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2416:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2429:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2429:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2440:1:3",
																				"nodeType": "YulLiteral",
																				"src": "2440:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2425:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2425:3:3"
																		},
																		"nativeSrc": "2425:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2425:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2372:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "2372:43:3"
																},
																"nativeSrc": "2372:71:3",
																"nodeType": "YulFunctionCall",
																"src": "2372:71:3"
															},
															"nativeSrc": "2372:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "2372:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2228:222:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2298:9:3",
														"nodeType": "YulTypedName",
														"src": "2298:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2310:6:3",
														"nodeType": "YulTypedName",
														"src": "2310:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2321:4:3",
														"nodeType": "YulTypedName",
														"src": "2321:4:3",
														"type": ""
													}
												],
												"src": "2228:222:3"
											},
											{
												"body": {
													"nativeSrc": "2556:519:3",
													"nodeType": "YulBlock",
													"src": "2556:519:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2602:83:3",
																"nodeType": "YulBlock",
																"src": "2602:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2604:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2604:77:3"
																			},
																			"nativeSrc": "2604:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2604:79:3"
																		},
																		"nativeSrc": "2604:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2604:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2577:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2577:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2586:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2586:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2573:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:3"
																		},
																		"nativeSrc": "2573:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2573:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2598:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2598:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2569:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2569:3:3"
																},
																"nativeSrc": "2569:32:3",
																"nodeType": "YulFunctionCall",
																"src": "2569:32:3"
															},
															"nativeSrc": "2566:119:3",
															"nodeType": "YulIf",
															"src": "2566:119:3"
														},
														{
															"nativeSrc": "2695:117:3",
															"nodeType": "YulBlock",
															"src": "2695:117:3",
															"statements": [
																{
																	"nativeSrc": "2710:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2710:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2724:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2724:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2714:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2714:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2739:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2739:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2774:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2774:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2785:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2785:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2770:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2770:3:3"
																				},
																				"nativeSrc": "2770:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2770:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2794:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2794:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2749:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2749:20:3"
																		},
																		"nativeSrc": "2749:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2749:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2739:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2739:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2822:118:3",
															"nodeType": "YulBlock",
															"src": "2822:118:3",
															"statements": [
																{
																	"nativeSrc": "2837:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2837:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2851:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2851:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2841:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2841:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2867:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2867:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2902:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2902:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2913:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2913:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2898:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2898:3:3"
																				},
																				"nativeSrc": "2898:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2898:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2922:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2922:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2877:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2877:20:3"
																		},
																		"nativeSrc": "2877:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2877:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2867:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2867:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2950:118:3",
															"nodeType": "YulBlock",
															"src": "2950:118:3",
															"statements": [
																{
																	"nativeSrc": "2965:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2965:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2979:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2979:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2969:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2969:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2995:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2995:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3030:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3030:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3041:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3041:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3026:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3026:3:3"
																				},
																				"nativeSrc": "3026:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3026:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3050:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3050:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3005:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "3005:20:3"
																		},
																		"nativeSrc": "3005:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3005:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2995:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2995:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2456:619:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2510:9:3",
														"nodeType": "YulTypedName",
														"src": "2510:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2521:7:3",
														"nodeType": "YulTypedName",
														"src": "2521:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2533:6:3",
														"nodeType": "YulTypedName",
														"src": "2533:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2541:6:3",
														"nodeType": "YulTypedName",
														"src": "2541:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2549:6:3",
														"nodeType": "YulTypedName",
														"src": "2549:6:3",
														"type": ""
													}
												],
												"src": "2456:619:3"
											},
											{
												"body": {
													"nativeSrc": "3147:263:3",
													"nodeType": "YulBlock",
													"src": "3147:263:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "3193:83:3",
																"nodeType": "YulBlock",
																"src": "3193:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3195:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "3195:77:3"
																			},
																			"nativeSrc": "3195:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3195:79:3"
																		},
																		"nativeSrc": "3195:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3195:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3168:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3168:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3177:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3177:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3164:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3164:3:3"
																		},
																		"nativeSrc": "3164:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3164:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3189:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3189:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3160:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3160:3:3"
																},
																"nativeSrc": "3160:32:3",
																"nodeType": "YulFunctionCall",
																"src": "3160:32:3"
															},
															"nativeSrc": "3157:119:3",
															"nodeType": "YulIf",
															"src": "3157:119:3"
														},
														{
															"nativeSrc": "3286:117:3",
															"nodeType": "YulBlock",
															"src": "3286:117:3",
															"statements": [
																{
																	"nativeSrc": "3301:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3301:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3315:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3315:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3305:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3305:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3330:63:3",
																	"nodeType": "YulAssignment",
																	"src": "3330:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3365:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3365:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3376:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3376:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3361:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3361:3:3"
																				},
																				"nativeSrc": "3361:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3385:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3385:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3340:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "3340:20:3"
																		},
																		"nativeSrc": "3340:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3340:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3330:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3330:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3081:329:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3117:9:3",
														"nodeType": "YulTypedName",
														"src": "3117:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3128:7:3",
														"nodeType": "YulTypedName",
														"src": "3128:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3140:6:3",
														"nodeType": "YulTypedName",
														"src": "3140:6:3",
														"type": ""
													}
												],
												"src": "3081:329:3"
											},
											{
												"body": {
													"nativeSrc": "3499:391:3",
													"nodeType": "YulBlock",
													"src": "3499:391:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "3545:83:3",
																"nodeType": "YulBlock",
																"src": "3545:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3547:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "3547:77:3"
																			},
																			"nativeSrc": "3547:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3547:79:3"
																		},
																		"nativeSrc": "3547:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3529:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3529:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3516:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3516:3:3"
																		},
																		"nativeSrc": "3516:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3516:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3541:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3541:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3512:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3512:3:3"
																},
																"nativeSrc": "3512:32:3",
																"nodeType": "YulFunctionCall",
																"src": "3512:32:3"
															},
															"nativeSrc": "3509:119:3",
															"nodeType": "YulIf",
															"src": "3509:119:3"
														},
														{
															"nativeSrc": "3638:117:3",
															"nodeType": "YulBlock",
															"src": "3638:117:3",
															"statements": [
																{
																	"nativeSrc": "3653:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3653:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3667:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3667:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3657:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3657:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3682:63:3",
																	"nodeType": "YulAssignment",
																	"src": "3682:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3717:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3717:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3728:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3728:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3713:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3713:3:3"
																				},
																				"nativeSrc": "3713:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3713:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3737:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3737:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3692:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "3692:20:3"
																		},
																		"nativeSrc": "3692:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3692:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3682:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3682:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3765:118:3",
															"nodeType": "YulBlock",
															"src": "3765:118:3",
															"statements": [
																{
																	"nativeSrc": "3780:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3780:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3794:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3794:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3784:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3784:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3810:63:3",
																	"nodeType": "YulAssignment",
																	"src": "3810:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3845:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3845:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3856:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3856:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3841:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3841:3:3"
																				},
																				"nativeSrc": "3841:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3841:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3865:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3865:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3820:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "3820:20:3"
																		},
																		"nativeSrc": "3820:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3820:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3810:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3810:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3416:474:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3461:9:3",
														"nodeType": "YulTypedName",
														"src": "3461:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3472:7:3",
														"nodeType": "YulTypedName",
														"src": "3472:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3484:6:3",
														"nodeType": "YulTypedName",
														"src": "3484:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3492:6:3",
														"nodeType": "YulTypedName",
														"src": "3492:6:3",
														"type": ""
													}
												],
												"src": "3416:474:3"
											},
											{
												"body": {
													"nativeSrc": "3924:152:3",
													"nodeType": "YulBlock",
													"src": "3924:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3941:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3941:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3944:77:3",
																		"nodeType": "YulLiteral",
																		"src": "3944:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3934:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3934:6:3"
																},
																"nativeSrc": "3934:88:3",
																"nodeType": "YulFunctionCall",
																"src": "3934:88:3"
															},
															"nativeSrc": "3934:88:3",
															"nodeType": "YulExpressionStatement",
															"src": "3934:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4038:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4038:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4041:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4041:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4031:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4031:6:3"
																},
																"nativeSrc": "4031:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4031:15:3"
															},
															"nativeSrc": "4031:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4031:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4062:1:3",
																		"nodeType": "YulLiteral",
																		"src": "4062:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4065:4:3",
																		"nodeType": "YulLiteral",
																		"src": "4065:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4055:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4055:6:3"
																},
																"nativeSrc": "4055:15:3",
																"nodeType": "YulFunctionCall",
																"src": "4055:15:3"
															},
															"nativeSrc": "4055:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "4055:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3896:180:3",
												"nodeType": "YulFunctionDefinition",
												"src": "3896:180:3"
											},
											{
												"body": {
													"nativeSrc": "4127:149:3",
													"nodeType": "YulBlock",
													"src": "4127:149:3",
													"statements": [
														{
															"nativeSrc": "4137:25:3",
															"nodeType": "YulAssignment",
															"src": "4137:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4160:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4160:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4142:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4142:17:3"
																},
																"nativeSrc": "4142:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4142:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4137:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4137:1:3"
																}
															]
														},
														{
															"nativeSrc": "4171:25:3",
															"nodeType": "YulAssignment",
															"src": "4171:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4194:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4194:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4176:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4176:17:3"
																},
																"nativeSrc": "4176:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4176:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4171:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4171:1:3"
																}
															]
														},
														{
															"nativeSrc": "4205:17:3",
															"nodeType": "YulAssignment",
															"src": "4205:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4217:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4217:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4220:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4220:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4213:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4213:3:3"
																},
																"nativeSrc": "4213:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4213:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4205:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4205:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4247:22:3",
																"nodeType": "YulBlock",
																"src": "4247:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4249:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4249:16:3"
																			},
																			"nativeSrc": "4249:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4249:18:3"
																		},
																		"nativeSrc": "4249:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4249:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4238:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "4238:4:3"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4244:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4244:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4235:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "4235:2:3"
																},
																"nativeSrc": "4235:11:3",
																"nodeType": "YulFunctionCall",
																"src": "4235:11:3"
															},
															"nativeSrc": "4232:37:3",
															"nodeType": "YulIf",
															"src": "4232:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4082:194:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4113:1:3",
														"nodeType": "YulTypedName",
														"src": "4113:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4116:1:3",
														"nodeType": "YulTypedName",
														"src": "4116:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4122:4:3",
														"nodeType": "YulTypedName",
														"src": "4122:4:3",
														"type": ""
													}
												],
												"src": "4082:194:3"
											},
											{
												"body": {
													"nativeSrc": "4326:147:3",
													"nodeType": "YulBlock",
													"src": "4326:147:3",
													"statements": [
														{
															"nativeSrc": "4336:25:3",
															"nodeType": "YulAssignment",
															"src": "4336:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4359:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4359:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4341:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4341:17:3"
																},
																"nativeSrc": "4341:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4341:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4336:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4336:1:3"
																}
															]
														},
														{
															"nativeSrc": "4370:25:3",
															"nodeType": "YulAssignment",
															"src": "4370:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4393:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4393:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4375:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "4375:17:3"
																},
																"nativeSrc": "4375:20:3",
																"nodeType": "YulFunctionCall",
																"src": "4375:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4370:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "4370:1:3"
																}
															]
														},
														{
															"nativeSrc": "4404:16:3",
															"nodeType": "YulAssignment",
															"src": "4404:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4415:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4415:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4418:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4418:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4411:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4411:3:3"
																},
																"nativeSrc": "4411:9:3",
																"nodeType": "YulFunctionCall",
																"src": "4411:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4404:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4404:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4444:22:3",
																"nodeType": "YulBlock",
																"src": "4444:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4446:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "4446:16:3"
																			},
																			"nativeSrc": "4446:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4446:18:3"
																		},
																		"nativeSrc": "4446:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4446:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4436:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "4436:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4439:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "4439:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4433:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "4433:2:3"
																},
																"nativeSrc": "4433:10:3",
																"nodeType": "YulFunctionCall",
																"src": "4433:10:3"
															},
															"nativeSrc": "4430:36:3",
															"nodeType": "YulIf",
															"src": "4430:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4282:191:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4313:1:3",
														"nodeType": "YulTypedName",
														"src": "4313:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4316:1:3",
														"nodeType": "YulTypedName",
														"src": "4316:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4322:3:3",
														"nodeType": "YulTypedName",
														"src": "4322:3:3",
														"type": ""
													}
												],
												"src": "4282:191:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610086575f3560e01c806370a082311161005957806370a0823114610138578063a457c2d714610168578063a9059cbb14610198578063dd62ed3e146101c857610086565b8063095ea7b31461008a57806318160ddd146100ba57806323b872dd146100d85780633950935114610108575b5f5ffd5b6100a4600480360381019061009f9190610e99565b6101f8565b6040516100b19190610ef1565b60405180910390f35b6100c261031c565b6040516100cf9190610f19565b60405180910390f35b6100f260048036038101906100ed9190610f32565b610325565b6040516100ff9190610ef1565b60405180910390f35b610122600480360381019061011d9190610e99565b6106be565b60405161012f9190610ef1565b60405180910390f35b610152600480360381019061014d9190610f82565b6108e4565b60405161015f9190610f19565b60405180910390f35b610182600480360381019061017d9190610e99565b610929565b60405161018f9190610ef1565b60405180910390f35b6101b260048036038101906101ad9190610e99565b610b4f565b6040516101bf9190610ef1565b60405180910390f35b6101e260048036038101906101dd9190610fad565b610d5c565b6040516101ef9190610f19565b60405180910390f35b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610230575f5ffd5b8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161030a9190610f19565b60405180910390a36001905092915050565b5f600254905090565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205482111561036e575f5ffd5b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20548211156103f2575f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610429575f5ffd5b610478825f5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610dde90919063ffffffff16565b5f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610507825f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610df390919063ffffffff16565b5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506105d28260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610dde90919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106ab9190610f19565b60405180910390a3600190509392505050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106f6575f5ffd5b6107818260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610df390919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516108d29190610f19565b60405180910390a36001905092915050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610961575f5ffd5b6109ec8260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610dde90919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054604051610b3d9190610f19565b60405180910390a36001905092915050565b5f5f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054821115610b98575f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bcf575f5ffd5b610c1e825f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610dde90919063ffffffff16565b5f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610cad825f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610df390919063ffffffff16565b5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d4a9190610f19565b60405180910390a36001905092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f8183610deb9190611018565b905092915050565b5f8183610e00919061104b565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610e3582610e0c565b9050919050565b610e4581610e2b565b8114610e4f575f5ffd5b50565b5f81359050610e6081610e3c565b92915050565b5f819050919050565b610e7881610e66565b8114610e82575f5ffd5b50565b5f81359050610e9381610e6f565b92915050565b5f5f60408385031215610eaf57610eae610e08565b5b5f610ebc85828601610e52565b9250506020610ecd85828601610e85565b9150509250929050565b5f8115159050919050565b610eeb81610ed7565b82525050565b5f602082019050610f045f830184610ee2565b92915050565b610f1381610e66565b82525050565b5f602082019050610f2c5f830184610f0a565b92915050565b5f5f5f60608486031215610f4957610f48610e08565b5b5f610f5686828701610e52565b9350506020610f6786828701610e52565b9250506040610f7886828701610e85565b9150509250925092565b5f60208284031215610f9757610f96610e08565b5b5f610fa484828501610e52565b91505092915050565b5f5f60408385031215610fc357610fc2610e08565b5b5f610fd085828601610e52565b9250506020610fe185828601610e52565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61102282610e66565b915061102d83610e66565b925082820390508181111561104557611044610feb565b5b92915050565b5f61105582610e66565b915061106083610e66565b925082820190508082111561107857611077610feb565b5b9291505056fea2646970667358221220a0ce4d6b321dbe7cc1e7c333c50bfc30438d1e80f6f63298cc867e6f1c15456664736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1C8 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x108 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB1 SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC2 PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0xF32 JUMP JUMPDEST PUSH2 0x325 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFF SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11D SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x929 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x230 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x36E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x429 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x478 DUP3 PUSH0 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x507 DUP3 PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDF3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x5D2 DUP3 PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x781 DUP3 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDF3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x8D2 SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x961 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9EC DUP3 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0xB98 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBCF JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC1E DUP3 PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDDE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCAD DUP3 PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xDF3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD4A SWAP2 SWAP1 PUSH2 0xF19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xE00 SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE35 DUP3 PUSH2 0xE0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE45 DUP2 PUSH2 0xE2B JUMP JUMPDEST DUP2 EQ PUSH2 0xE4F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE60 DUP2 PUSH2 0xE3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE78 DUP2 PUSH2 0xE66 JUMP JUMPDEST DUP2 EQ PUSH2 0xE82 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE93 DUP2 PUSH2 0xE6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEAF JUMPI PUSH2 0xEAE PUSH2 0xE08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEBC DUP6 DUP3 DUP7 ADD PUSH2 0xE52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xECD DUP6 DUP3 DUP7 ADD PUSH2 0xE85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEB DUP2 PUSH2 0xED7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF04 PUSH0 DUP4 ADD DUP5 PUSH2 0xEE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF13 DUP2 PUSH2 0xE66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2C PUSH0 DUP4 ADD DUP5 PUSH2 0xF0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF49 JUMPI PUSH2 0xF48 PUSH2 0xE08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF56 DUP7 DUP3 DUP8 ADD PUSH2 0xE52 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF67 DUP7 DUP3 DUP8 ADD PUSH2 0xE52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF78 DUP7 DUP3 DUP8 ADD PUSH2 0xE85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF97 JUMPI PUSH2 0xF96 PUSH2 0xE08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFA4 DUP5 DUP3 DUP6 ADD PUSH2 0xE52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC3 JUMPI PUSH2 0xFC2 PUSH2 0xE08 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFD0 DUP6 DUP3 DUP7 ADD PUSH2 0xE52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFE1 DUP6 DUP3 DUP7 ADD PUSH2 0xE52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1022 DUP3 PUSH2 0xE66 JUMP JUMPDEST SWAP2 POP PUSH2 0x102D DUP4 PUSH2 0xE66 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1045 JUMPI PUSH2 0x1044 PUSH2 0xFEB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1055 DUP3 PUSH2 0xE66 JUMP JUMPDEST SWAP2 POP PUSH2 0x1060 DUP4 PUSH2 0xE66 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1078 JUMPI PUSH2 0x1077 PUSH2 0xFEB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xCE 0x4D PUSH12 0x321DBE7CC1E7C333C50BFC30 NUMBER DUP14 0x1E DUP1 0xF6 0xF6 ORIGIN SWAP9 0xCC DUP7 PUSH31 0x6F1C15456664736F6C634300081C0033000000000000000000000000000000 ",
							"sourceMap": "427:6541:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2627:220;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;698:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3119:458;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4028:330;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;978:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4814:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1695:316;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1393:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2627:220;2692:4;2731:1;2712:21;;:7;:21;;;2704:30;;;;;;2773:5;2741:8;:20;2750:10;2741:20;;;;;;;;;;;;;;;:29;2762:7;2741:29;;;;;;;;;;;;;;;:37;;;;2810:7;2789:36;;2798:10;2789:36;;;2819:5;2789:36;;;;;;:::i;:::-;;;;;;;;2838:4;2831:11;;2627:220;;;;:::o;698:83::-;742:7;764:12;;757:19;;698:83;:::o;3119:458::-;3222:4;3253:9;:15;3263:4;3253:15;;;;;;;;;;;;;;;;3244:5;:24;;3236:33;;;;;;3292:8;:14;3301:4;3292:14;;;;;;;;;;;;;;;:26;3307:10;3292:26;;;;;;;;;;;;;;;;3283:5;:35;;3275:44;;;;;;3347:1;3333:16;;:2;:16;;;3325:25;;;;;;3375:26;3395:5;3375:9;:15;3385:4;3375:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;3357:9;:15;3367:4;3357:15;;;;;;;;;;;;;;;:44;;;;3423:24;3441:5;3423:9;:13;3433:2;3423:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;3407:9;:13;3417:2;3407:13;;;;;;;;;;;;;;;:40;;;;3482:37;3513:5;3482:8;:14;3491:4;3482:14;;;;;;;;;;;;;;;:26;3497:10;3482:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3453:8;:14;3462:4;3453:14;;;;;;;;;;;;;;;:26;3468:10;3453:26;;;;;;;;;;;;;;;:66;;;;3545:2;3530:25;;3539:4;3530:25;;;3549:5;3530:25;;;;;;:::i;:::-;;;;;;;;3568:4;3561:11;;3119:458;;;;;:::o;4028:330::-;4128:4;4169:1;4150:21;;:7;:21;;;4142:30;;;;;;4219:45;4253:10;4219:8;:20;4228:10;4219:20;;;;;;;;;;;;;;;:29;4240:7;4219:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4179:8;:20;4188:10;4179:20;;;;;;;;;;;;;;;:29;4200:7;4179:29;;;;;;;;;;;;;;;:86;;;;4297:7;4276:60;;4285:10;4276:60;;;4306:8;:20;4315:10;4306:20;;;;;;;;;;;;;;;:29;4327:7;4306:29;;;;;;;;;;;;;;;;4276:60;;;;;;:::i;:::-;;;;;;;;4349:4;4342:11;;4028:330;;;;:::o;978:98::-;1033:7;1055:9;:16;1065:5;1055:16;;;;;;;;;;;;;;;;1048:23;;978:98;;;:::o;4814:340::-;4919:4;4960:1;4941:21;;:7;:21;;;4933:30;;;;;;5010:50;5044:15;5010:8;:20;5019:10;5010:20;;;;;;;;;;;;;;;:29;5031:7;5010:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;4970:8;:20;4979:10;4970:20;;;;;;;;;;;;;;;:29;4991:7;4970:29;;;;;;;;;;;;;;;:91;;;;5093:7;5072:60;;5081:10;5072:60;;;5102:8;:20;5111:10;5102:20;;;;;;;;;;;;;;;:29;5123:7;5102:29;;;;;;;;;;;;;;;;5072:60;;;;;;:::i;:::-;;;;;;;;5145:4;5138:11;;4814:340;;;;:::o;1695:316::-;1756:4;1785:9;:21;1795:10;1785:21;;;;;;;;;;;;;;;;1776:5;:30;;1768:39;;;;;;1835:1;1821:16;;:2;:16;;;1813:25;;;;;;1869:32;1895:5;1869:9;:21;1879:10;1869:21;;;;;;;;;;;;;;;;:25;;:32;;;;:::i;:::-;1845:9;:21;1855:10;1845:21;;;;;;;;;;;;;;;:56;;;;1923:24;1941:5;1923:9;:13;1933:2;1923:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;1907:9;:13;1917:2;1907:13;;;;;;;;;;;;;;;:40;;;;1979:2;1958:31;;1967:10;1958:31;;;1983:5;1958:31;;;;;;:::i;:::-;;;;;;;;2002:4;1995:11;;1695:316;;;;:::o;1393:150::-;1490:7;1514:8;:15;1523:5;1514:15;;;;;;;;;;;;;;;:24;1530:7;1514:24;;;;;;;;;;;;;;;;1507:31;;1393:150;;;;:::o;3122:96:1:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:118::-;2191:24;2209:5;2191:24;:::i;:::-;2186:3;2179:37;2104:118;;:::o;2228:222::-;2321:4;2359:2;2348:9;2344:18;2336:26;;2372:71;2440:1;2429:9;2425:17;2416:6;2372:71;:::i;:::-;2228:222;;;;:::o;2456:619::-;2533:6;2541;2549;2598:2;2586:9;2577:7;2573:23;2569:32;2566:119;;;2604:79;;:::i;:::-;2566:119;2724:1;2749:53;2794:7;2785:6;2774:9;2770:22;2749:53;:::i;:::-;2739:63;;2695:117;2851:2;2877:53;2922:7;2913:6;2902:9;2898:22;2877:53;:::i;:::-;2867:63;;2822:118;2979:2;3005:53;3050:7;3041:6;3030:9;3026:22;3005:53;:::i;:::-;2995:63;;2950:118;2456:619;;;;;:::o;3081:329::-;3140:6;3189:2;3177:9;3168:7;3164:23;3160:32;3157:119;;;3195:79;;:::i;:::-;3157:119;3315:1;3340:53;3385:7;3376:6;3365:9;3361:22;3340:53;:::i;:::-;3330:63;;3286:117;3081:329;;;;:::o;3416:474::-;3484:6;3492;3541:2;3529:9;3520:7;3516:23;3512:32;3509:119;;;3547:79;;:::i;:::-;3509:119;3667:1;3692:53;3737:7;3728:6;3717:9;3713:22;3692:53;:::i;:::-;3682:63;;3638:117;3794:2;3820:53;3865:7;3856:6;3845:9;3841:22;3820:53;:::i;:::-;3810:63;;3765:118;3416:474;;;;;:::o;3896:180::-;3944:77;3941:1;3934:88;4041:4;4038:1;4031:15;4065:4;4062:1;4055:15;4082:194;4122:4;4142:20;4160:1;4142:20;:::i;:::-;4137:25;;4176:20;4194:1;4176:20;:::i;:::-;4171:25;;4220:1;4217;4213:9;4205:17;;4244:1;4238:4;4235:11;4232:37;;;4249:18;;:::i;:::-;4232:37;4082:194;;;;:::o;4282:191::-;4322:3;4341:20;4359:1;4341:20;:::i;:::-;4336:25;;4375:20;4393:1;4375:20;:::i;:::-;4370:25;;4418:1;4415;4411:9;4404:16;;4439:3;4436:1;4433:10;4430:36;;;4446:18;;:::i;:::-;4430:36;4282:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "855200",
								"executionCost": "888",
								"totalCost": "856088"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2828",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"totalSupply()": "2455",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 427,
									"end": 6968,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 427,
									"end": 6968,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0ce4d6b321dbe7cc1e7c333c50bfc30438d1e80f6f63298cc867e6f1c15456664736f6c634300081c0033",
									".code": [
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 6968,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2627,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2627,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2627,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 698,
											"end": 781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 698,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 698,
											"end": 781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 698,
											"end": 781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 781,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 698,
											"end": 781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 698,
											"end": 781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 698,
											"end": 781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 781,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3119,
											"end": 3577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3119,
											"end": 3577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3119,
											"end": 3577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4028,
											"end": 4358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4028,
											"end": 4358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4028,
											"end": 4358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 978,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 978,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 978,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4814,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4814,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4814,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1695,
											"end": 2011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1695,
											"end": 2011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1695,
											"end": 2011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1393,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1393,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1393,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2732,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2733,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2712,
											"end": 2733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2719,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2733,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2712,
											"end": 2733,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2712,
											"end": 2733,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2704,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2749,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2760,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2769,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2770,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2778,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2789,
											"end": 2825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2825,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2838,
											"end": 2842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2831,
											"end": 2842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2831,
											"end": 2842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 698,
											"end": 781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 776,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 764,
											"end": 776,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 757,
											"end": 776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 757,
											"end": 776,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 698,
											"end": 781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3253,
											"end": 3268,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3268,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3268,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3236,
											"end": 3269,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3269,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3269,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3269,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3236,
											"end": 3269,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3236,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3300,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3305,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3306,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3307,
											"end": 3317,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3318,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3288,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3318,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3283,
											"end": 3318,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3275,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3275,
											"end": 3319,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3275,
											"end": 3319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3275,
											"end": 3319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3275,
											"end": 3319,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3275,
											"end": 3319,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3275,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3348,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3349,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3333,
											"end": 3349,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3335,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3349,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3333,
											"end": 3349,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3333,
											"end": 3349,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3325,
											"end": 3350,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3350,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3350,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3325,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3395,
											"end": 3400,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3384,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3389,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3390,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3375,
											"end": 3394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3375,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3371,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3372,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3401,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3401,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3401,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3441,
											"end": 3446,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3435,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3436,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3423,
											"end": 3440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3447,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3423,
											"end": 3447,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3423,
											"end": 3447,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3423,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3419,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3420,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3447,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3513,
											"end": 3518,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3490,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3491,
											"end": 3495,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3496,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3507,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3508,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3482,
											"end": 3512,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3519,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3519,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3519,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3482,
											"end": 3519,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3519,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3482,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3466,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3467,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3478,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3479,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3519,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3519,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3519,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3453,
											"end": 3519,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3547,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3539,
											"end": 3543,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3530,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3555,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 3568,
											"end": 3572,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3561,
											"end": 3572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4128,
											"end": 4132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4171,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4150,
											"end": 4171,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4157,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4171,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4150,
											"end": 4171,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4171,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4142,
											"end": 4172,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4172,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4172,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4142,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4253,
											"end": 4263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4227,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4238,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4239,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4247,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4219,
											"end": 4252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4264,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4264,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4264,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4219,
											"end": 4264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4219,
											"end": 4264,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4219,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4187,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4198,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4207,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4265,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4265,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4297,
											"end": 4304,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4285,
											"end": 4295,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4325,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4326,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4334,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4335,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4276,
											"end": 4336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4336,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 4349,
											"end": 4353,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4342,
											"end": 4353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4028,
											"end": 4358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1033,
											"end": 1040,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1070,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1071,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 978,
											"end": 1076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 4961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4941,
											"end": 4962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4941,
											"end": 4962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4933,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4933,
											"end": 4963,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4933,
											"end": 4963,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4963,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4963,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4933,
											"end": 4963,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4933,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5044,
											"end": 5059,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5018,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5019,
											"end": 5029,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5010,
											"end": 5030,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5031,
											"end": 5038,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5039,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5010,
											"end": 5043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5060,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5060,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5010,
											"end": 5060,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5060,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5010,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4978,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4979,
											"end": 4989,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 4990,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 4998,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 4999,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 5061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 5061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 5061,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 5061,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5093,
											"end": 5100,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5081,
											"end": 5091,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5102,
											"end": 5110,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5111,
											"end": 5121,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5122,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5130,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5131,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5072,
											"end": 5132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5145,
											"end": 5149,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5138,
											"end": 5149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5138,
											"end": 5149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4814,
											"end": 5154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1805,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1806,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1768,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1836,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1821,
											"end": 1837,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1823,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1821,
											"end": 1837,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1837,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1813,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1895,
											"end": 1900,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1889,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1869,
											"end": 1894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1901,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 1901,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1901,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1869,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1865,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1901,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1941,
											"end": 1946,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1932,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1935,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1936,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1923,
											"end": 1940,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1947,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1947,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1923,
											"end": 1947,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1923,
											"end": 1947,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1923,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1916,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1917,
											"end": 1919,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1920,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1947,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1907,
											"end": 1947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1979,
											"end": 1981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1967,
											"end": 1977,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1983,
											"end": 1988,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1958,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1989,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2006,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1995,
											"end": 2006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1995,
											"end": 2006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 2011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1522,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1523,
											"end": 1528,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1537,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1538,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1538,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1507,
											"end": 1538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1393,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1740,
											"end": 1761,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1854,
											"end": 1875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1842,
											"end": 1876,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2088,
											"end": 2089,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2086,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2070,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2026,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2209,
											"end": 2214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2191,
											"end": 2215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2191,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2189,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2179,
											"end": 2216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2361,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2357,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2440,
											"end": 2441,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2372,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2372,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2450,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2539,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2600,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2584,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2596,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2601,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2604,
											"end": 2683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2604,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2566,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2725,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2794,
											"end": 2801,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2791,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2774,
											"end": 2783,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2770,
											"end": 2792,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2749,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2749,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2802,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2695,
											"end": 2812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2913,
											"end": 2919,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2920,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2877,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2930,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2877,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2867,
											"end": 2930,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2867,
											"end": 2930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2822,
											"end": 2940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 2981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3005,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3030,
											"end": 3039,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3005,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 3005,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3005,
											"end": 3058,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3005,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3058,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3058,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2950,
											"end": 3068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 3075,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2456,
											"end": 3075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3410,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3081,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3140,
											"end": 3146,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3191,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3177,
											"end": 3186,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3175,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3164,
											"end": 3187,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3192,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3276,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3157,
											"end": 3276,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3195,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3195,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3195,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3195,
											"end": 3274,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3195,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3276,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3157,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3385,
											"end": 3392,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3374,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3383,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3340,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3393,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3340,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3393,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3393,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3286,
											"end": 3403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3890,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3416,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3490,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3498,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3529,
											"end": 3538,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3516,
											"end": 3539,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3544,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3628,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3509,
											"end": 3628,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3547,
											"end": 3626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3628,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3509,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3667,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3737,
											"end": 3744,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3728,
											"end": 3734,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3717,
											"end": 3726,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3735,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3692,
											"end": 3745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3692,
											"end": 3745,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3692,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3745,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3755,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3794,
											"end": 3796,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 3862,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3820,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3820,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3820,
											"end": 3873,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3820,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3873,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 3883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3890,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3890,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4076,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3896,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3944,
											"end": 4021,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 4022,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4045,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4038,
											"end": 4039,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4065,
											"end": 4069,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4062,
											"end": 4063,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4055,
											"end": 4070,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4276,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4082,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4142,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4160,
											"end": 4161,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4142,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4162,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 4142,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4137,
											"end": 4162,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4137,
											"end": 4162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4194,
											"end": 4195,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4176,
											"end": 4196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 4176,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4220,
											"end": 4221,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4218,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4213,
											"end": 4222,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4205,
											"end": 4222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4205,
											"end": 4222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4244,
											"end": 4245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4238,
											"end": 4242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4235,
											"end": 4246,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4269,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4232,
											"end": 4269,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4249,
											"end": 4267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4232,
											"end": 4269,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 4232,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4276,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4473,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4282,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4341,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4341,
											"end": 4361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4341,
											"end": 4361,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 4341,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4361,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4336,
											"end": 4361,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4393,
											"end": 4394,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4375,
											"end": 4395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4395,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 4375,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4370,
											"end": 4395,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4370,
											"end": 4395,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4418,
											"end": 4419,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4415,
											"end": 4416,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4411,
											"end": 4420,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4404,
											"end": 4420,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4404,
											"end": 4420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4439,
											"end": 4442,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4437,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4443,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4466,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4430,
											"end": 4466,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4446,
											"end": 4464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4466,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4430,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4473,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4473,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"OpenZeppelin-ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard token. https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md Originally based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"returns\":{\"_0\":\"A uint256 specifying the amount of tokens still available for the spender.\"}},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"returns\":{\"_0\":\"An uint256 representing the amount owned by the passed address.\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"Standard ERC20 token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"OpenZeppelin-ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"OpenZeppelin-ERC20.sol\":{\"keccak256\":\"0xdb3cd96dc1a321e278dc96aa26ac938e1e5b6bd7c480af0a48ae3c9100badbef\",\"urls\":[\"bzz-raw://6d1d73231c8b9ead9e59df2e9f1328a14d705dcc0a7e3a1830911a0b6a78da43\",\"dweb:/ipfs/QmVfRsoi6hSXb4t3v8ytyQp7i7x8PS7pvbDyuRkDCyqQN9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "OpenZeppelin-ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 409,
								"contract": "OpenZeppelin-ERC20.sol:ERC20",
								"label": "_allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 411,
								"contract": "OpenZeppelin-ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> OpenZeppelin-ERC20.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "OpenZeppelin-ERC20.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 97,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 95,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 93,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 91,
															"id": 104,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 91,
														"id": 109,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 389,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 125,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 389,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 180,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															161
														],
														"declarations": [
															{
																"constant": false,
																"id": 161,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 180,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 160,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 165,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 162,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 163,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 166,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 167,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 169,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 175,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 174,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 177,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 179,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 389,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 208,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 201,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 193,
															"id": 200,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 203,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 204,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 206,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 193,
														"id": 207,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 389,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 236,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 229,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 221,
															"id": 228,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 215,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 221,
														"id": 235,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 389,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 249,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 247,
												"id": 251,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 389,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 262,
												"id": 266,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 389,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 278,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 279,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 277,
												"id": 281,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 389,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 294,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 296,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 389,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 307,
												"id": 311,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 389,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "5054:106:1",
										"statements": [
											{
												"id": 336,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 326,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "5096:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "5101:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 329,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "5104:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 325,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "5138:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "5142:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 324,
														"id": 335,
														"nodeType": "Return",
														"src": "5131:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4972:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4983:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "4994:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:1"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "5045:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:1"
									},
									"scope": 389,
									"src": "4959:201:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "5739:105:1",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 351,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "5781:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 354,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "5788:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 350,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 356,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "5822:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "5826:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 349,
														"id": 360,
														"nodeType": "Return",
														"src": "5815:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5679:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "5730:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:1"
									},
									"scope": 389,
									"src": "5644:200:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "6585:105:1",
										"statements": [
											{
												"id": 386,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "6627:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 379,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "6634:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 375,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 381,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 382,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6668:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "6672:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 374,
														"id": 385,
														"nodeType": "Return",
														"src": "6661:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6503:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6514:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6525:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 369,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "6576:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:1"
									},
									"scope": 389,
									"src": "6490:200:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "482:6210:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:1"
				},
				"id": 1
			},
			"OpenZeppelin-ERC20.sol": {
				"ast": {
					"absolutePath": "OpenZeppelin-ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							885
						],
						"IERC20": [
							77
						],
						"SafeMath": [
							389
						]
					},
					"id": 886,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 392,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 886,
							"sourceUnit": 78,
							"src": "25:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 886,
							"sourceUnit": 390,
							"src": "82:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 395,
										"name": "IERC20",
										"nameLocations": [
											"445:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "445:6:2"
									},
									"id": 396,
									"nodeType": "InheritanceSpecifier",
									"src": "445:6:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 394,
								"nodeType": "StructuredDocumentation",
								"src": "142:284:2",
								"text": " @title Standard ERC20 token\n @dev Implementation of the basic standard token.\n https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n Originally based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol"
							},
							"fullyImplemented": true,
							"id": 885,
							"linearizedBaseContracts": [
								885,
								77
							],
							"name": "ERC20",
							"nameLocation": "436:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 399,
									"libraryName": {
										"id": 397,
										"name": "SafeMath",
										"nameLocations": [
											"462:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "462:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "456:27:2",
									"typeName": {
										"id": 398,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "475:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 885,
									"src": "487:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 402,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 400,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "496:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "487:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 401,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "_allowed",
									"nameLocation": "596:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 885,
									"src": "538:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 408,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 404,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "547:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "538:49:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 407,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 405,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "567:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "558:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 406,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "578:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 411,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "625:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 885,
									"src": "609:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 410,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "609:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "751:30:2",
										"statements": [
											{
												"expression": {
													"id": 417,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 411,
													"src": "764:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 416,
												"id": 418,
												"nodeType": "Return",
												"src": "757:19:2"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "642:53:2",
										"text": " @dev Total number of tokens in existence"
									},
									"functionSelector": "18160ddd",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "707:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "718:2:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "742:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:9:2"
									},
									"scope": 885,
									"src": "698:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "1042:34:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 428,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1055:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 430,
													"indexExpression": {
														"id": 429,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "1065:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1055:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 427,
												"id": 431,
												"nodeType": "Return",
												"src": "1048:23:2"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "785:190:2",
										"text": " @dev Gets the balance of the specified address.\n @param owner The address to query the balance of.\n @return An uint256 representing the amount owned by the passed address."
									},
									"functionSelector": "70a08231",
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "987:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "996:15:2"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1033:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1033:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:9:2"
									},
									"scope": 885,
									"src": "978:98:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "1501:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 443,
															"name": "_allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "1514:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 445,
														"indexExpression": {
															"id": 444,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "1523:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1514:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "1530:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1514:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 442,
												"id": 448,
												"nodeType": "Return",
												"src": "1507:31:2"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1080:310:2",
										"text": " @dev Function to check the amount of tokens that an owner allowed to a spender.\n @param owner address The address which owns the funds.\n @param spender address The address which will spend the funds.\n @return A uint256 specifying the amount of tokens still available for the spender."
									},
									"functionSelector": "dd62ed3e",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1425:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "1417:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "1436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1411:45:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "1490:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1489:9:2"
									},
									"scope": 885,
									"src": "1393:150:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "1762:249:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 461,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "1776:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 462,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "1785:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 465,
																"indexExpression": {
																	"expression": {
																		"id": 463,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1795:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1799:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1795:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1785:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1776:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1768:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1768:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "1768:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 470,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "1821:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1835:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1827:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 471,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1827:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1827:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1821:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 469,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1813:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1813:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "1813:25:2"
											},
											{
												"expression": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 478,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "1845:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 481,
														"indexExpression": {
															"expression": {
																"id": 479,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1855:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1859:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1855:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1845:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 487,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "1895:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 482,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "1869:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 485,
																"indexExpression": {
																	"expression": {
																		"id": 483,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1879:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1883:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1879:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1869:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1891:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "1869:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1869:32:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "1845:56:2"
											},
											{
												"expression": {
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 491,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "1907:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 493,
														"indexExpression": {
															"id": 492,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "1917:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1907:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 498,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 455,
																"src": "1941:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 494,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "1923:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 496,
																"indexExpression": {
																	"id": 495,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "1933:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1923:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1937:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "1923:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1923:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1907:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "1907:40:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 503,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1967:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1971:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1967:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "1979:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "1983:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 502,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1958:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1958:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "EmitStatement",
												"src": "1953:36:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2002:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 510,
												"nodeType": "Return",
												"src": "1995:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "1547:145:2",
										"text": " @dev Transfer token for a specified address\n @param to The address to transfer to.\n @param value The amount to be transferred."
									},
									"functionSelector": "a9059cbb",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1704:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1721:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1713:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1712:27:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "1756:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1756:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:6:2"
									},
									"scope": 885,
									"src": "1695:316:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "2698:149:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "2712:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2731:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2723:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 524,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2723:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2723:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2712:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2704:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2704:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "2704:30:2"
											},
											{
												"expression": {
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 531,
																"name": "_allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "2741:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 535,
															"indexExpression": {
																"expression": {
																	"id": 532,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2750:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2754:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2750:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2741:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 536,
														"indexExpression": {
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "2762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2741:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 537,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "2773:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2741:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2741:37:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 541,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2798:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2802:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2798:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 543,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "2810:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "2819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 540,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "2789:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2789:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "EmitStatement",
												"src": "2784:41:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2838:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 521,
												"id": 548,
												"nodeType": "Return",
												"src": "2831:11:2"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2015:609:2",
										"text": " @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n Beware that changing an allowance with this method brings the risk that someone may use both the old\n and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent."
									},
									"functionSelector": "095ea7b3",
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2636:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2652:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "2644:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2669:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "2661:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2643:32:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "2692:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2692:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2691:6:2"
									},
									"scope": 885,
									"src": "2627:220:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "3230:347:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 563,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "3244:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 564,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "3253:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 566,
																"indexExpression": {
																	"id": 565,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "3263:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3253:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3244:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3236:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3236:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "3236:33:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 571,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "3283:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 572,
																		"name": "_allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "3292:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 574,
																	"indexExpression": {
																		"id": 573,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 553,
																		"src": "3301:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3292:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 577,
																"indexExpression": {
																	"expression": {
																		"id": 575,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3307:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3311:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3307:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3292:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3283:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 570,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3275:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3275:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "3275:44:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 582,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "3333:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3347:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3339:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 583,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3339:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3339:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3333:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "3325:25:2"
											},
											{
												"expression": {
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 590,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "3357:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 592,
														"indexExpression": {
															"id": 591,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "3367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3357:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 597,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "3395:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 593,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "3375:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 595,
																"indexExpression": {
																	"id": 594,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "3385:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3375:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3391:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "3375:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3375:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3357:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "3357:44:2"
											},
											{
												"expression": {
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 601,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "3407:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 603,
														"indexExpression": {
															"id": 602,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "3417:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3407:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 608,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "3441:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 604,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "3423:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 606,
																"indexExpression": {
																	"id": 605,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 555,
																	"src": "3433:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3423:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3437:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "3423:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3423:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3407:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "3407:40:2"
											},
											{
												"expression": {
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 612,
																"name": "_allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "3453:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 616,
															"indexExpression": {
																"id": 613,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "3462:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3453:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 617,
														"indexExpression": {
															"expression": {
																"id": 614,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3468:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3472:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3468:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3453:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 625,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "3513:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 618,
																		"name": "_allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "3482:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 620,
																	"indexExpression": {
																		"id": 619,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 553,
																		"src": "3491:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3482:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 623,
																"indexExpression": {
																	"expression": {
																		"id": 621,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3497:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3501:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3497:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3482:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3509:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "3482:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3482:37:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3453:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "3453:66:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 630,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "3539:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 631,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "3545:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3549:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "3530:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3530:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "EmitStatement",
												"src": "3525:30:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3568:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 561,
												"id": 636,
												"nodeType": "Return",
												"src": "3561:11:2"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "2851:265:2",
										"text": " @dev Transfer tokens from one address to another\n @param from address The address which you want to send tokens from\n @param to address The address which you want to transfer to\n @param value uint256 the amount of tokens to be transferred"
									},
									"functionSelector": "23b872dd",
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3128:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3154:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3146:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3172:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3164:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3164:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3188:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3180:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:57:2"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3222:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 559,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3222:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:6:2"
									},
									"scope": 885,
									"src": "3119:458:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "4136:222:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 649,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "4150:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4169:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4161:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 650,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4161:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4161:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4150:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 648,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4142:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4142:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "4142:30:2"
											},
											{
												"expression": {
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 657,
																"name": "_allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "4179:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 661,
															"indexExpression": {
																"expression": {
																	"id": 658,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4188:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4192:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4188:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4179:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 662,
														"indexExpression": {
															"id": 660,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "4200:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4179:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"arguments": [
																	{
																		"id": 670,
																		"name": "addedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "4253:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 663,
																				"name": "_allowed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "4219:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 666,
																			"indexExpression": {
																				"expression": {
																					"id": 664,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4228:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4232:6:2",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4228:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4219:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 668,
																		"indexExpression": {
																			"id": 667,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 641,
																			"src": "4240:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4219:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4249:3:2",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 253,
																	"src": "4219:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4219:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 672,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4211:54:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4179:86:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "4179:86:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 676,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4285:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4289:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4285:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 678,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "4297:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 679,
																	"name": "_allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "4306:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 682,
																"indexExpression": {
																	"expression": {
																		"id": 680,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4315:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4319:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4315:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4306:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 684,
															"indexExpression": {
																"id": 683,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "4327:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4306:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 675,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "4276:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "EmitStatement",
												"src": "4271:65:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4349:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 647,
												"id": 688,
												"nodeType": "Return",
												"src": "4342:11:2"
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "3581:444:2",
										"text": " @dev Increase the amount of tokens that an owner allowed to a spender.\n approve should be called when allowed_[_spender] == 0. To increment\n allowed value is better to use this function to avoid 2 calls (and wait until\n the first transaction is mined)\n From MonolithDAO Token.sol\n @param spender The address which will spend the funds.\n @param addedValue The amount of tokens to increase the allowance by."
									},
									"functionSelector": "39509351",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "4037:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4068:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "4060:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4060:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "4089:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "4081:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4081:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4054:49:2"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "4128:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4128:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4127:6:2"
									},
									"scope": 885,
									"src": "4028:330:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "4927:227:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 701,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "4941:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4960:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4952:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 702,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4952:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4952:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4941:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4933:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4933:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "4933:30:2"
											},
											{
												"expression": {
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 709,
																"name": "_allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "4970:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 713,
															"indexExpression": {
																"expression": {
																	"id": 710,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4979:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4983:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4979:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4970:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 714,
														"indexExpression": {
															"id": 712,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "4991:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4970:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"arguments": [
																	{
																		"id": 722,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "5044:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 715,
																				"name": "_allowed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "5010:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 718,
																			"indexExpression": {
																				"expression": {
																					"id": 716,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "5019:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 717,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5023:6:2",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "5019:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5010:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 720,
																		"indexExpression": {
																			"id": 719,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 693,
																			"src": "5031:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5010:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5040:3:2",
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 268,
																	"src": "5010:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5010:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 724,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5002:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4970:91:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "4970:91:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 728,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5081:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5085:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5081:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "5093:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 731,
																	"name": "_allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "5102:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 734,
																"indexExpression": {
																	"expression": {
																		"id": 732,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5111:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5115:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5111:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5102:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 736,
															"indexExpression": {
																"id": 735,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "5123:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5102:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "5072:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5072:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "EmitStatement",
												"src": "5067:65:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5145:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 699,
												"id": 740,
												"nodeType": "Return",
												"src": "5138:11:2"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "4362:449:2",
										"text": " @dev Decrease the amount of tokens that an owner allowed to a spender.\n approve should be called when allowed_[_spender] == 0. To decrement\n allowed value is better to use this function to avoid 2 calls (and wait until\n the first transaction is mined)\n From MonolithDAO Token.sol\n @param spender The address which will spend the funds.\n @param subtractedValue The amount of tokens to decrease the allowance by."
									},
									"functionSelector": "a457c2d7",
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "4823:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4854:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "4846:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4846:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "4875:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "4867:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4840:54:2"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "4919:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 697,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4919:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4918:6:2"
									},
									"scope": 885,
									"src": "4814:340:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "5539:206:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 751,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "5549:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5568:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5560:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 752,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5560:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5560:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5549:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5572:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 750,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5541:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5541:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "5541:49:2"
											},
											{
												"expression": {
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 760,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "5596:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 763,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "5628:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 761,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "5611:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5624:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "5611:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5611:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5596:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "5596:39:2"
											},
											{
												"expression": {
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 767,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "5641:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 769,
														"indexExpression": {
															"id": 768,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "5651:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5641:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 774,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "5685:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 770,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "5662:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 772,
																"indexExpression": {
																	"id": 771,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "5672:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5662:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5681:3:2",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 253,
															"src": "5662:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5662:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5641:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "5641:51:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5720:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5712:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 779,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5712:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5712:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 783,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "5724:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 784,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "5733:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 778,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "5703:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5703:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "EmitStatement",
												"src": "5698:42:2"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "5158:321:2",
										"text": " @dev Internal function that mints an amount of the token and assigns it to\n an account. This encapsulates the modification of balances such that the\n proper events are emitted.\n @param account The account that will receive the created tokens.\n @param amount The amount that will be created."
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "5491:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5505:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "5497:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5497:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5522:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "5514:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5514:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5496:33:2"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5539:0:2"
									},
									"scope": 885,
									"src": "5482:263:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "6015:250:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 797,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "6025:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6044:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6036:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 798,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6036:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6036:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6025:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6048:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6017:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6017:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "6017:49:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 807,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "6080:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 808,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6090:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 810,
																"indexExpression": {
																	"id": 809,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "6100:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6090:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6080:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6072:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6072:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "6072:37:2"
											},
											{
												"expression": {
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 814,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "6116:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 817,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "6148:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 815,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "6131:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6144:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "6131:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6131:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6116:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "6116:39:2"
											},
											{
												"expression": {
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 821,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "6161:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 823,
														"indexExpression": {
															"id": 822,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "6171:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6161:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 828,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "6205:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 824,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6182:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 826,
																"indexExpression": {
																	"id": 825,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "6192:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6182:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6201:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "6182:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6182:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6161:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "6161:51:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 833,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "6232:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6249:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6241:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 834,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6241:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6241:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "6253:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 832,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "6223:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6223:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "EmitStatement",
												"src": "6218:42:2"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "5749:206:2",
										"text": " @dev Internal function that burns an amount of the token of a given\n account.\n @param account The account whose tokens will be burnt.\n @param amount The amount that will be burnt."
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "5967:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5981:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "5973:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5998:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "5990:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5990:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5972:33:2"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6015:0:2"
									},
									"scope": 885,
									"src": "5958:307:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "6633:333:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 851,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "6647:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 852,
																		"name": "_allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "6657:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 854,
																	"indexExpression": {
																		"id": 853,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "6666:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6657:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 857,
																"indexExpression": {
																	"expression": {
																		"id": 855,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6675:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6679:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6675:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6657:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6647:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6639:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "6639:48:2"
											},
											{
												"expression": {
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 861,
																"name": "_allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "6853:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 865,
															"indexExpression": {
																"id": 862,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "6862:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6853:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 866,
														"indexExpression": {
															"expression": {
																"id": 863,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6871:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6875:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6871:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6853:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 874,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "6926:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 867,
																		"name": "_allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "6885:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 869,
																	"indexExpression": {
																		"id": 868,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "6894:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6885:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 872,
																"indexExpression": {
																	"expression": {
																		"id": 870,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6903:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6907:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6903:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6885:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6915:3:2",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 268,
															"src": "6885:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6885:48:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6853:80:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "6853:80:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 879,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "6945:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 880,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "6954:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 878,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "6939:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6939:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "6939:22:2"
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "6269:300:2",
										"text": " @dev Internal function that burns an amount of the token of a given\n account, deducting from the sender's allowance for said account. Uses the\n internal burn function.\n @param account The account whose tokens will be burnt.\n @param amount The amount that will be burnt."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nameLocation": "6581:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6599:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "6591:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6616:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "6608:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6608:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6590:33:2"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6633:0:2"
									},
									"scope": 885,
									"src": "6572:394:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 886,
							"src": "427:6541:2",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "0:6969:2"
				},
				"id": 2
			}
		}
	}
}